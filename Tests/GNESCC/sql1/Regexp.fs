//this file was generated by GNESCC
//source grammar:yards\a1.yrd
//date:11/15/2011 11:39:18 AM

module GNESCC.Regexp

open Yard.Generators.GNESCCGenerator
open System.Text.RegularExpressions

let buildIndexMap kvLst =
    let ks = List.map (fun (x:string,y) -> x.Length + 2,y) kvLst
    List.fold (fun (bl,blst) (l,v) -> bl+l,((bl,v)::blst)) (0,[]) ks
    |> snd
    |> dict

let buildStr kvLst =
    let sep = ";;"
    List.map fst kvLst 
    |> String.concat sep
    |> fun s -> ";" + s + ";"

let binop childsLst = 
    let str = buildStr childsLst
    let idxValMap = buildIndexMap childsLst
    let re = new Regex("(((;5;))|(((;6;))|(((;7;))|(((;8;))|(((;9;))|(((;10;))|(((;11;))|(((;12;))|(((;13;))|(((;14;))|(((;15;))|(((;16;))|(((;17;))|(((;18;))|(((;19;))|(((;20;))|(((;21;))|(((;22;))|((;23;))))))))))))))))))))")
    let elts =
        let res = re.Match(str)
        if Seq.fold (&&) true [for g in res.Groups -> g.Success]
        then res.Groups
        else (new Regex("(((;5;))|(((;6;))|(((;7;))|(((;8;))|(((;9;))|(((;10;))|(((;11;))|(((;12;))|(((;13;))|(((;14;))|(((;15;))|(((;16;))|(((;17;))|(((;18;))|(((;19;))|(((;20;))|(((;21;))|(((;22;))|((;23;))))))))))))))))))))",RegexOptions.RightToLeft)).Match(str).Groups
    if elts.[3].Value = ""
    then
        let e2 =
            if elts.[6].Value = ""
            then
                let e2 =
                    if elts.[9].Value = ""
                    then
                        let e2 =
                            if elts.[12].Value = ""
                            then
                                let e2 =
                                    if elts.[15].Value = ""
                                    then
                                        let e2 =
                                            if elts.[18].Value = ""
                                            then
                                                let e2 =
                                                    if elts.[21].Value = ""
                                                    then
                                                        let e2 =
                                                            if elts.[24].Value = ""
                                                            then
                                                                let e2 =
                                                                    if elts.[27].Value = ""
                                                                    then
                                                                        let e2 =
                                                                            if elts.[30].Value = ""
                                                                            then
                                                                                let e2 =
                                                                                    if elts.[33].Value = ""
                                                                                    then
                                                                                        let e2 =
                                                                                            if elts.[36].Value = ""
                                                                                            then
                                                                                                let e2 =
                                                                                                    if elts.[39].Value = ""
                                                                                                    then
                                                                                                        let e2 =
                                                                                                            if elts.[42].Value = ""
                                                                                                            then
                                                                                                                let e2 =
                                                                                                                    if elts.[45].Value = ""
                                                                                                                    then
                                                                                                                        let e2 =
                                                                                                                            if elts.[48].Value = ""
                                                                                                                            then
                                                                                                                                let e2 =
                                                                                                                                    if elts.[51].Value = ""
                                                                                                                                    then
                                                                                                                                        let e2 =
                                                                                                                                            if elts.[54].Value = ""
                                                                                                                                            then
                                                                                                                                                let e2 =
                                                                                                                                                    let e0 =
                                                                                                                                                        idxValMap.[elts.[56].Captures.[0].Index] |> RELeaf
                                                                                                                                                    RESeq [e0]
                                                                                                                                                None, Some (e2)
                                                                                                                                            else
                                                                                                                                                let e1 =
                                                                                                                                                    let e0 =
                                                                                                                                                        idxValMap.[elts.[54].Captures.[0].Index] |> RELeaf
                                                                                                                                                    RESeq [e0]
                                                                                                                                                Some (e1),None
                                                                                                                                            |> REAlt

                                                                                                                                        None, Some (e2)
                                                                                                                                    else
                                                                                                                                        let e1 =
                                                                                                                                            let e0 =
                                                                                                                                                idxValMap.[elts.[51].Captures.[0].Index] |> RELeaf
                                                                                                                                            RESeq [e0]
                                                                                                                                        Some (e1),None
                                                                                                                                    |> REAlt

                                                                                                                                None, Some (e2)
                                                                                                                            else
                                                                                                                                let e1 =
                                                                                                                                    let e0 =
                                                                                                                                        idxValMap.[elts.[48].Captures.[0].Index] |> RELeaf
                                                                                                                                    RESeq [e0]
                                                                                                                                Some (e1),None
                                                                                                                            |> REAlt

                                                                                                                        None, Some (e2)
                                                                                                                    else
                                                                                                                        let e1 =
                                                                                                                            let e0 =
                                                                                                                                idxValMap.[elts.[45].Captures.[0].Index] |> RELeaf
                                                                                                                            RESeq [e0]
                                                                                                                        Some (e1),None
                                                                                                                    |> REAlt

                                                                                                                None, Some (e2)
                                                                                                            else
                                                                                                                let e1 =
                                                                                                                    let e0 =
                                                                                                                        idxValMap.[elts.[42].Captures.[0].Index] |> RELeaf
                                                                                                                    RESeq [e0]
                                                                                                                Some (e1),None
                                                                                                            |> REAlt

                                                                                                        None, Some (e2)
                                                                                                    else
                                                                                                        let e1 =
                                                                                                            let e0 =
                                                                                                                idxValMap.[elts.[39].Captures.[0].Index] |> RELeaf
                                                                                                            RESeq [e0]
                                                                                                        Some (e1),None
                                                                                                    |> REAlt

                                                                                                None, Some (e2)
                                                                                            else
                                                                                                let e1 =
                                                                                                    let e0 =
                                                                                                        idxValMap.[elts.[36].Captures.[0].Index] |> RELeaf
                                                                                                    RESeq [e0]
                                                                                                Some (e1),None
                                                                                            |> REAlt

                                                                                        None, Some (e2)
                                                                                    else
                                                                                        let e1 =
                                                                                            let e0 =
                                                                                                idxValMap.[elts.[33].Captures.[0].Index] |> RELeaf
                                                                                            RESeq [e0]
                                                                                        Some (e1),None
                                                                                    |> REAlt

                                                                                None, Some (e2)
                                                                            else
                                                                                let e1 =
                                                                                    let e0 =
                                                                                        idxValMap.[elts.[30].Captures.[0].Index] |> RELeaf
                                                                                    RESeq [e0]
                                                                                Some (e1),None
                                                                            |> REAlt

                                                                        None, Some (e2)
                                                                    else
                                                                        let e1 =
                                                                            let e0 =
                                                                                idxValMap.[elts.[27].Captures.[0].Index] |> RELeaf
                                                                            RESeq [e0]
                                                                        Some (e1),None
                                                                    |> REAlt

                                                                None, Some (e2)
                                                            else
                                                                let e1 =
                                                                    let e0 =
                                                                        idxValMap.[elts.[24].Captures.[0].Index] |> RELeaf
                                                                    RESeq [e0]
                                                                Some (e1),None
                                                            |> REAlt

                                                        None, Some (e2)
                                                    else
                                                        let e1 =
                                                            let e0 =
                                                                idxValMap.[elts.[21].Captures.[0].Index] |> RELeaf
                                                            RESeq [e0]
                                                        Some (e1),None
                                                    |> REAlt

                                                None, Some (e2)
                                            else
                                                let e1 =
                                                    let e0 =
                                                        idxValMap.[elts.[18].Captures.[0].Index] |> RELeaf
                                                    RESeq [e0]
                                                Some (e1),None
                                            |> REAlt

                                        None, Some (e2)
                                    else
                                        let e1 =
                                            let e0 =
                                                idxValMap.[elts.[15].Captures.[0].Index] |> RELeaf
                                            RESeq [e0]
                                        Some (e1),None
                                    |> REAlt

                                None, Some (e2)
                            else
                                let e1 =
                                    let e0 =
                                        idxValMap.[elts.[12].Captures.[0].Index] |> RELeaf
                                    RESeq [e0]
                                Some (e1),None
                            |> REAlt

                        None, Some (e2)
                    else
                        let e1 =
                            let e0 =
                                idxValMap.[elts.[9].Captures.[0].Index] |> RELeaf
                            RESeq [e0]
                        Some (e1),None
                    |> REAlt

                None, Some (e2)
            else
                let e1 =
                    let e0 =
                        idxValMap.[elts.[6].Captures.[0].Index] |> RELeaf
                    RESeq [e0]
                Some (e1),None
            |> REAlt

        None, Some (e2)
    else
        let e1 =
            let e0 =
                idxValMap.[elts.[3].Captures.[0].Index] |> RELeaf
            RESeq [e0]
        Some (e1),None
    |> REAlt

let sql_expr childsLst = 
    let str = buildStr childsLst
    let idxValMap = buildIndexMap childsLst
    let re = new Regex("(((;24;))|(((;0;))|(((;26;)(;2;)(;27;))|(((;28;))|(((;2;)(;3;)(;2;))|((;30;)(;2;)(;31;)((((;32;)((;2;))*(;33;)))|((;2;)))))))))")
    let elts =
        let res = re.Match(str)
        if Seq.fold (&&) true [for g in res.Groups -> g.Success]
        then res.Groups
        else (new Regex("(((;24;))|(((;0;))|(((;26;)(;2;)(;27;))|(((;28;))|(((;2;)(;3;)(;2;))|((;30;)(;2;)(;31;)((((;32;)((;2;))*(;33;)))|((;2;)))))))))",RegexOptions.RightToLeft)).Match(str).Groups
    if elts.[3].Value = ""
    then
        let e2 =
            if elts.[6].Value = ""
            then
                let e2 =
                    if elts.[11].Value = ""
                    then
                        let e2 =
                            if elts.[14].Value = ""
                            then
                                let e2 =
                                    if elts.[19].Value = ""
                                    then
                                        let e2 =
                                            let e3 =
                                                if elts.[2].Value = ""
                                                then
                                                    let e2 =
                                                        let e0 =
                                                            idxValMap.[elts.[4].Captures.[0].Index] |> RELeaf
                                                        RESeq [e0]
                                                    None, Some (e2)
                                                else
                                                    let e1 =
                                                        let e0 =
                                                            let e2 =
                                                                idxValMap.[elts.[2].Captures.[0].Index] |> RELeaf
                                                            let e1 =
                                                                let ofset = ref 0
                                                                let e i =
                                                                    let str = elts.[28].Captures.[i].Value
                                                                    let re = new Regex("(;2;)")
                                                                    let elts =
                                                                        let res = re.Match(str)
                                                                        if Seq.fold (&&) true [for g in res.Groups -> g.Success]
                                                                        then res.Groups
                                                                        else (new Regex("(;2;)",RegexOptions.RightToLeft)).Match(str).Groups
                                                                    let res =
                                                                        idxValMap.[!ofset + elts.[1].Captures.[0].Index] |> RELeaf
                                                                    ofset := !ofset + str.Length
                                                                    res
                                                                REClosure [for i in [0..elts.[28].Captures.Count-1] -> e i]

                                                            let e0 =
                                                                idxValMap.[elts.[27].Captures.[0].Index] |> RELeaf
                                                            RESeq [e0; e1; e2]
                                                        RESeq [e0]
                                                    Some (e1),None
                                                |> REAlt

                                            let e2 =
                                                idxValMap.[elts.[23].Captures.[0].Index] |> RELeaf
                                            let e1 =
                                                idxValMap.[elts.[22].Captures.[0].Index] |> RELeaf
                                            let e0 =
                                                idxValMap.[elts.[21].Captures.[0].Index] |> RELeaf
                                            RESeq [e0; e1; e2; e3]
                                        None, Some (e2)
                                    else
                                        let e1 =
                                            let e2 =
                                                idxValMap.[elts.[19].Captures.[0].Index] |> RELeaf
                                            let e1 =
                                                idxValMap.[elts.[18].Captures.[0].Index] |> RELeaf
                                            let e0 =
                                                idxValMap.[elts.[17].Captures.[0].Index] |> RELeaf
                                            RESeq [e0; e1; e2]
                                        Some (e1),None
                                    |> REAlt

                                None, Some (e2)
                            else
                                let e1 =
                                    let e0 =
                                        idxValMap.[elts.[14].Captures.[0].Index] |> RELeaf
                                    RESeq [e0]
                                Some (e1),None
                            |> REAlt

                        None, Some (e2)
                    else
                        let e1 =
                            let e2 =
                                idxValMap.[elts.[11].Captures.[0].Index] |> RELeaf
                            let e1 =
                                idxValMap.[elts.[10].Captures.[0].Index] |> RELeaf
                            let e0 =
                                idxValMap.[elts.[9].Captures.[0].Index] |> RELeaf
                            RESeq [e0; e1; e2]
                        Some (e1),None
                    |> REAlt

                None, Some (e2)
            else
                let e1 =
                    let e0 =
                        idxValMap.[elts.[6].Captures.[0].Index] |> RELeaf
                    RESeq [e0]
                Some (e1),None
            |> REAlt

        None, Some (e2)
    else
        let e1 =
            let e0 =
                idxValMap.[elts.[3].Captures.[0].Index] |> RELeaf
            RESeq [e0]
        Some (e1),None
    |> REAlt

let sql_value childsLst = 
    let str = buildStr childsLst
    let idxValMap = buildIndexMap childsLst
    let re = new Regex("(((;34;))|((;35;)))")
    let elts =
        let res = re.Match(str)
        if Seq.fold (&&) true [for g in res.Groups -> g.Success]
        then res.Groups
        else (new Regex("(((;34;))|((;35;)))",RegexOptions.RightToLeft)).Match(str).Groups
    if elts.[3].Value = ""
    then
        let e2 =
            let e0 =
                idxValMap.[elts.[5].Captures.[0].Index] |> RELeaf
            RESeq [e0]
        None, Some (e2)
    else
        let e1 =
            let e0 =
                idxValMap.[elts.[3].Captures.[0].Index] |> RELeaf
            RESeq [e0]
        Some (e1),None
    |> REAlt


let ruleToRegex = dict [|(0,sql_value); (2,sql_expr); (3,binop)|]

