{
module Calc.Lexer
open Calc.AbstractParser
open AbstractLexer.Core
open AbstractAnalysis.Common
}

//let digit = ['1' '2']
let whitespace = [' ' '\t' '\r' '\n']

rule token = parse
//| digit+ ('.'digit+)? { NUMBER(lexeme,brs) |> Some }
| '+' { PLUS(lexeme,brs) |> Some }
| "**" { POW(lexeme,brs) |> Some }
| '*' { MULT(lexeme,brs) |> Some }
//| eof { RNGLR_EOF ("",[||]) |> Some }

