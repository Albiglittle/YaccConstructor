//this file was generated by YARD Recursive-Ascent 
//source grammar:..\..\..\..\Tests\test002.yrd
//date:03.11.2009 16:42:04
#light "off"

module Actions

open Yard.Core
open Yard.Core.AST.Value

let getValue,getSeqNum =
 let _val arg =
      if (Option.isNone arg)
      then failwith "Argument exception. Value can not be None"
     else Option.get arg
 in
 let _getSeqNum arg = (fst (_val arg)):int in
 let _getV arg = ignore(_getSeqNum arg);snd (_val arg) in
 _getV,_getSeqNum


let s1_action  arg0 = 
 (fun x1 ->
  let (res) = (getValue x1) in 
res) arg0


let expr2_action  arg0 arg1 arg2 = 
 (fun x1 x2 x3 ->
  let (n1:string) = (getValue x1) in 
let (n2:string) = (getValue x3) in 
float n1 + float n2) arg0 arg1 arg2
