<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
		<SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#000000"/>
		<SolidColorBrush x:Key="ToolBarButtonChecked" Color="#FEC37F"/>
		<SolidColorBrush x:Key="ToolBarButtonHover" Color="#FFEEC2"/>
		<SolidColorBrush x:Key="ToolBarButtonPressedBorder" Color="#000000"/>
		<SolidColorBrush x:Key="ToolBarButtonPressed" Color="#F0C070"/>
	<Style x:Key="ToggleButtonStyleOrange" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
							<Setter Property="Background" Value="{StaticResource ToolBarButtonChecked}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
							<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<!--<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
							<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="IsChecked" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
							<Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocused" Value="true"/>
								<Condition Property="IsChecked" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
							<Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
							<Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>