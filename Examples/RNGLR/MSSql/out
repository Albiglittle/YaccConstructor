+root_rule:  create_proc;

+root_rule:  GO;

+root_rule:  start2;

start2:  <sel_expr> = KW_SELECT ident KW_FROM ident;

start2:  GLOBALVAR;

start2:  GLOBALTEMPOBJ;

start2:  TEMPOBJ;

proc_formal_param:  yard_exp_brackets_1 yard_opt_2 yard_opt_3 yard_opt_4
    yard_opt_5;

yard_opt_1:  {None};

yard_opt_1:  <yard_elem> = yard_exp_brackets_2 {Some(yard_elem)};

yard_opt_2:  {None};

yard_opt_2:  <yard_elem> = KW_VARYING {Some(yard_elem)};

yard_opt_3:  {None};

yard_opt_3:  <yard_elem> = yard_exp_brackets_3 {Some(yard_elem)};

yard_opt_4:  {None};

yard_opt_4:  <yard_elem> = yard_exp_brackets_4 {Some(yard_elem)};

yard_opt_5:  {None};

yard_opt_5:  <yard_elem> = KW_READONLY {Some(yard_elem)};

create_proc:  KW_CREATE yard_exp_brackets_5 yard_opt_6 ident yard_opt_7
    yard_opt_8 yard_opt_9 yard_opt_10 KW_AS yard_opt_11 yard_many_1 yard_opt_13
    yard_opt_14;

yard_opt_6:  {None};

yard_opt_6:  <yard_elem> = yard_exp_brackets_6 {Some(yard_elem)};

yard_opt_7:  {None};

yard_opt_7:  <yard_elem> = yard_exp_brackets_7 {Some(yard_elem)};

yard_opt_8:  {None};

yard_opt_8:  <yard_elem> = comma_list<<proc_formal_param>> {Some(yard_elem)};

yard_some_1:  <yard_elem> = execute_as {[yard_elem]};

yard_some_1:  <yard_head> = execute_as <yard_tail> = yard_some_1
    {yard_head::yard_tail};

yard_opt_9:  {None};

yard_opt_9:  <yard_elem> = yard_exp_brackets_8 {Some(yard_elem)};

yard_opt_10:  {None};

yard_opt_10:  <yard_elem> = yard_exp_brackets_9 {Some(yard_elem)};

yard_opt_11:  {None};

yard_opt_11:  <yard_elem> = KW_BEGIN {Some(yard_elem)};

yard_opt_12:  {None};

yard_opt_12:  <yard_elem> = SEMI {Some(yard_elem)};

yard_many_1:  {[]};

yard_many_1:  <yard_head> = yard_exp_brackets_10 <yard_tail> = yard_many_1
    {yard_head::yard_tail};

yard_opt_13:  {None};

yard_opt_13:  <yard_elem> = KW_END {Some(yard_elem)};

yard_opt_14:  {None};

yard_opt_14:  <yard_elem> = SEMI {Some(yard_elem)};

proc_body_stmnt:  select_stmnt;

proc_body_stmnt:  set_stmnt;

proc_body_stmnt:  execute_stmnt;

proc_body_stmnt:  sql_expr;

proc_body_stmnt:  KW_DECLARE LOCALVAR KW_AS sql_datatype yard_opt_15;

proc_body_stmnt:  KW_RETURN sql_expr;

proc_body_stmnt:  KW_IF sql_expr KW_THEN yard_exp_brackets_11;

yard_opt_15:  {None};

yard_opt_15:  <yard_elem> = yard_exp_brackets_12 {Some(yard_elem)};

yard_many_2:  {[]};

yard_many_2:  <yard_head> = sql_expr <yard_tail> = yard_many_2
    {yard_head::yard_tail};

select_stmnt:  query_expression yard_opt_16;

yard_opt_16:  {None};

yard_opt_16:  <yard_elem> = yard_exp_brackets_13 {Some(yard_elem)};

query_expression:  yard_exp_brackets_14 yard_opt_17;

yard_opt_18:  {None};

yard_opt_18:  <yard_elem> = KW_ALL {Some(yard_elem)};

yard_opt_17:  {None};

yard_opt_17:  <yard_elem> = yard_exp_brackets_15 {Some(yard_elem)};

query_specification:  KW_SELECT
    list<< STAR  |  full_ident  DOT  STAR  |  (    yard_opt_19  (    IDENT  |  (  DOLLAR  KW_IDENTITY  )  |  (  DOLLAR  KW_ROWGUID  )  )  | <udt_column_runtime> = IDENT  yard_opt_20[udt_column_runtime]  |  sql_expr  yard_opt_22  )  |  IDENT  OP_EQ  sql_expr  COMMA>>
     yard_opt_24 yard_opt_25;

yard_opt_19:  {None};

yard_opt_19:  <yard_elem> = yard_exp_brackets_16 {Some(yard_elem)};

yard_opt_21[udt_column_runtime]:  {None};

yard_opt_21[udt_column_runtime]:  <yard_elem> = comma_list<<sql_expr>>
    {Some(yard_elem)};

yard_opt_20[udt_column_runtime]:  {None};

yard_opt_20[udt_column_runtime]:  <yard_elem> =
    yard_exp_brackets_17[udt_column_runtime] {Some(yard_elem)};

yard_opt_23:  {None};

yard_opt_23:  <yard_elem> = KW_AS {Some(yard_elem)};

yard_opt_22:  {None};

yard_opt_22:  <yard_elem> = yard_exp_brackets_18 {Some(yard_elem)};

yard_opt_24:  {None};

yard_opt_24:  <yard_elem> = from_stmnt {Some(yard_elem)};

yard_opt_25:  {None};

yard_opt_25:  <yard_elem> = yard_exp_brackets_19 {Some(yard_elem)};

search_condition:  yard_exp_brackets_20 yard_opt_27;

yard_opt_26:  {None};

yard_opt_26:  <yard_elem> = KW_NOT {Some(yard_elem)};

yard_opt_28:  {None};

yard_opt_28:  <yard_elem> = KW_NOT {Some(yard_elem)};

yard_opt_27:  {None};

yard_opt_27:  <yard_elem> =
    comma_list<< (    KW_AND  |  KW_OR  )  yard_opt_28  (    search_condition_predicate  |  LPAREN  search_condition  RPAREN  ) >>
    {Some(yard_elem)};

search_condition_predicate:  sql_expr yard_exp_brackets_21 sql_expr;

search_condition_predicate:  sql_expr yard_opt_29 KW_LIKE sql_expr;

search_condition_predicate:  sql_expr KW_IS yard_opt_30 KW_NULL;

yard_opt_29:  {None};

yard_opt_29:  <yard_elem> = KW_NOT {Some(yard_elem)};

yard_opt_30:  {None};

yard_opt_30:  <yard_elem> = KW_NOT {Some(yard_elem)};

from_stmnt:  KW_FROM
    comma_list<< full_ident  yard_opt_31  yard_opt_33  yard_opt_34  | <user_defined_function> = IDENT  yard_opt_35[user_defined_function] >>
    ;

yard_opt_32:  {None};

yard_opt_32:  <yard_elem> = KW_AS {Some(yard_elem)};

yard_opt_31:  {None};

yard_opt_31:  <yard_elem> = yard_exp_brackets_22 {Some(yard_elem)};

yard_opt_33:  {None};

yard_opt_33:  <yard_elem> = tablesample_clause {Some(yard_elem)};

yard_some_2:  <yard_elem> = table_hint {[yard_elem]};

yard_some_2:  <yard_head> = table_hint <yard_tail> = yard_some_2
    {yard_head::yard_tail};

yard_opt_34:  {None};

yard_opt_34:  <yard_elem> = yard_exp_brackets_23 {Some(yard_elem)};

yard_opt_36[user_defined_function]:  {None};

yard_opt_36[user_defined_function]:  <yard_elem> = KW_AS {Some(yard_elem)};

yard_opt_35[user_defined_function]:  {None};

yard_opt_35[user_defined_function]:  <yard_elem> =
    yard_exp_brackets_24[user_defined_function] {Some(yard_elem)};

tablesample_clause:  KW_TABLESAMPLE yard_opt_37 LPAREN DEC_NUMBER yard_opt_38
    RPAREN yard_opt_39;

yard_opt_37:  {None};

yard_opt_37:  <yard_elem> = KW_SYSTEM {Some(yard_elem)};

yard_opt_38:  {None};

yard_opt_38:  <yard_elem> = yard_exp_brackets_25 {Some(yard_elem)};

yard_opt_39:  {None};

yard_opt_39:  <yard_elem> = yard_exp_brackets_26 {Some(yard_elem)};

table_hint:  yard_opt_40 NOLOCK;

yard_opt_40:  {None};

yard_opt_40:  <yard_elem> = KW_NOEXPAND {Some(yard_elem)};

execute_stmnt:  yard_exp_brackets_27 yard_opt_41 yard_exp_brackets_28
    yard_opt_43 yard_opt_44;

yard_opt_41:  {None};

yard_opt_41:  <yard_elem> = yard_exp_brackets_29 {Some(yard_elem)};

yard_opt_42:  {None};

yard_opt_42:  <yard_elem> = yard_exp_brackets_30 {Some(yard_elem)};

yard_opt_43:  {None};

yard_opt_43:  <yard_elem> = yard_exp_brackets_31 {Some(yard_elem)};

yard_opt_44:  {None};

yard_opt_44:  <yard_elem> = SEMI {Some(yard_elem)};

set_stmnt:  SET IMPLICIT_TRANSACTIONS yard_exp_brackets_32;

set_stmnt:  SET NOCOUNT yard_exp_brackets_33;

set_stmnt:  SET ANSI_NULLS yard_exp_brackets_34;

set_stmnt:  SET QUOTED_IDENTIFIER yard_exp_brackets_35;

set_stmnt:  SET LOCALVAR yard_opt_45 OP_EQ yard_exp_brackets_36;

yard_opt_45:  {None};

yard_opt_45:  <yard_elem> = yard_exp_brackets_37 {Some(yard_elem)};

sql_datatype:  KW_BIGINT;

sql_datatype:  KW_NUMERIC;

sql_datatype:  KW_BIT;

sql_datatype:  KW_SMALLINT;

sql_datatype:  KW_DECIMAL;

sql_datatype:  KW_SMALLMONEY;

sql_datatype:  KW_INT;

sql_datatype:  KW_TINYINT;

sql_datatype:  KW_MONEY;

sql_datatype:  KW_FLOAT yard_opt_46;

sql_datatype:  KW_REAL;

sql_datatype:  KW_CHAR yard_opt_47;

sql_datatype:  KW_VARCHAR yard_opt_48;

sql_datatype:  KW_NCHAR yard_opt_49;

sql_datatype:  KW_NVARCHAR yard_opt_50;

yard_opt_46:  {None};

yard_opt_46:  <yard_elem> = yard_exp_brackets_38 {Some(yard_elem)};

yard_opt_47:  {None};

yard_opt_47:  <yard_elem> = yard_exp_brackets_39 {Some(yard_elem)};

yard_opt_48:  {None};

yard_opt_48:  <yard_elem> = yard_exp_brackets_40 {Some(yard_elem)};

yard_opt_49:  {None};

yard_opt_49:  <yard_elem> = yard_exp_brackets_41 {Some(yard_elem)};

yard_opt_50:  {None};

yard_opt_50:  <yard_elem> = yard_exp_brackets_42 {Some(yard_elem)};

execute_as:  yard_exp_brackets_43 KW_AS yard_exp_brackets_44;

binop:  OP_PLUS_EQ;

binop:  OP_MINUS_EQ;

binop:  OP_MUL_EQ;

binop:  OP_DIV_EQ;

binop:  OP_MOD_EQ;

binop:  OP_AND_EQ;

binop:  OP_XOR_EQ;

binop:  OP_OR_EQ;

binop:  OP_EQ;

binop:  OP_PLUS;

binop:  OP_MINUS;

binop:  OP_MUL;

binop:  OP_DIV;

binop:  OP_MOD;

binop:  OP_TILDA;

binop:  OP_LT;

binop:  OP_MT;

binop:  OP_LT_EQ;

binop:  OP_MT_EQ;

sql_expr_lrecu:  sql_expr binop sql_expr;

sql_expr:  sql_expr_lrecu;

sql_expr:  sql_value;

sql_expr:  LPAREN sql_expr RPAREN;

sql_expr:  LOCALVAR;

sql_expr:  full_ident LPAREN yard_opt_51 RPAREN;

sql_expr:  KW_SELECT sql_expr KW_FROM IDENT;

sql_expr:  yard_exp_brackets_45 sql_expr;

sql_expr:  GLOBALVAR;

sql_expr:  full_ident;

yard_opt_51:  {None};

yard_opt_51:  <yard_elem> = comma_list<<sql_expr>> {Some(yard_elem)};

list<<item sep>>:  item yard_many_3<<item sep>>;

yard_many_3<<item sep>>:  {[]};

yard_many_3<<item sep>>:  <yard_head> = yard_exp_brackets_46 <yard_tail> =
    yard_many_3<<item sep>> {yard_head::yard_tail};

comma_list<<item>>:  list<<item COMMA>>;

sql_value:  STRING_CONST;

sql_value:  DEC_NUMBER;

ident:  LBRACKET ident RBRACKET;

ident:  IDENT;

full_ident:  list<<ident DOT>>;

yard_exp_brackets_1:  LOCALVAR yard_opt_1 sql_datatype;

yard_exp_brackets_2:  full_ident DOT;

yard_exp_brackets_3:  OP_EQ yard_exp_brackets_47;

yard_exp_brackets_4:  KW_OUT;

yard_exp_brackets_4:  KW_OUTPUT;

yard_exp_brackets_5:  KW_PROCEDURE;

yard_exp_brackets_5:  KW_PROC;

yard_exp_brackets_6:  ident DOT;

yard_exp_brackets_7:  SEMI DEC_NUMBER;

yard_exp_brackets_8:  KW_WITH yard_some_1;

yard_exp_brackets_9:  KW_FOR KW_REPLICATION;

yard_exp_brackets_10:  proc_body_stmnt yard_opt_12;

yard_exp_brackets_11:  yard_exp_brackets_48;

yard_exp_brackets_11:  sql_expr;

yard_exp_brackets_12:  OP_EQ sql_expr;

yard_exp_brackets_13:  KW_INTO full_ident;

yard_exp_brackets_14:  query_specification;

yard_exp_brackets_14:  yard_exp_brackets_49;

yard_exp_brackets_15:  yard_exp_brackets_50 query_specification;

yard_exp_brackets_15:  LPAREN query_expression RPAREN;

yard_exp_brackets_16:  full_ident DOT;

yard_exp_brackets_17[udt_column_runtime]: 
    yard_exp_brackets_51[udt_column_runtime]
    yard_exp_brackets_52[udt_column_runtime];

yard_exp_brackets_18:  yard_opt_23 IDENT;

yard_exp_brackets_19:  KW_WHERE search_condition;

yard_exp_brackets_20:  yard_opt_26 search_condition_predicate;

yard_exp_brackets_20:  LPAREN search_condition RPAREN;

yard_exp_brackets_21:  OP_EQ;

yard_exp_brackets_21:  OP_LT;

yard_exp_brackets_21:  OP_MT;

yard_exp_brackets_21:  yard_exp_brackets_53;

yard_exp_brackets_21:  OP_LT_EQ;

yard_exp_brackets_21:  OP_MT_EQ;

yard_exp_brackets_22:  yard_opt_32 IDENT;

yard_exp_brackets_23:  KW_WITH LPAREN yard_some_2 RPAREN;

yard_exp_brackets_24[user_defined_function]:  yard_opt_36[user_defined_function]
    IDENT;

yard_exp_brackets_25:  KW_RERCENT;

yard_exp_brackets_25:  KW_ROWS;

yard_exp_brackets_26:  KW_REPEATABLE LPAREN DEC_NUMBER RPAREN;

yard_exp_brackets_27:  KW_EXEC;

yard_exp_brackets_27:  KW_EXECUTE;

yard_exp_brackets_28:  yard_exp_brackets_54;

yard_exp_brackets_28:  LOCALVAR;

yard_exp_brackets_29:  LOCALVAR OP_EQ;

yard_exp_brackets_30:  SEMI DEC_NUMBER;

yard_exp_brackets_31:  KW_WITH KW_RECOMPILE;

yard_exp_brackets_32:  ON;

yard_exp_brackets_32:  OFF;

yard_exp_brackets_33:  ON;

yard_exp_brackets_33:  OFF;

yard_exp_brackets_34:  ON;

yard_exp_brackets_34:  OFF;

yard_exp_brackets_35:  ON;

yard_exp_brackets_35:  OFF;

yard_exp_brackets_36:  sql_expr;

yard_exp_brackets_36:  IDENT yard_exp_brackets_55 IDENT;

yard_exp_brackets_37:  DOT IDENT;

yard_exp_brackets_38:  LPAREN DEC_NUMBER RPAREN;

yard_exp_brackets_39:  LPAREN DEC_NUMBER RPAREN;

yard_exp_brackets_40:  LPAREN yard_exp_brackets_56 RPAREN;

yard_exp_brackets_41:  LPAREN DEC_NUMBER RPAREN;

yard_exp_brackets_42:  LPAREN yard_exp_brackets_57 RPAREN;

yard_exp_brackets_43:  KW_EXEC;

yard_exp_brackets_43:  KW_EXECUTE;

yard_exp_brackets_44:  KW_CALLER;

yard_exp_brackets_44:  KW_SELF;

yard_exp_brackets_44:  KW_OWNER;

yard_exp_brackets_44:  username = STRING_CONST;

yard_exp_brackets_45:  OP_PLUS_EQ;

yard_exp_brackets_45:  OP_MINUS_EQ;

yard_exp_brackets_45:  OP_TILDA;

yard_exp_brackets_46:  sep item;

yard_exp_brackets_47:  KW_NULL;

yard_exp_brackets_47:  DEC_NUMBER;

yard_exp_brackets_47:  STRING_CONST;

yard_exp_brackets_48:  KW_BEGIN yard_many_2 KW_END;

yard_exp_brackets_49:  LPAREN query_expression RPAREN;

yard_exp_brackets_50:  KW_UNION yard_opt_18;

yard_exp_brackets_50:  KW_EXCEPT;

yard_exp_brackets_50:  KW_INTERSECT;

yard_exp_brackets_51[udt_column_runtime]:  DOT;

yard_exp_brackets_51[udt_column_runtime]:  DOUBLE_COLON;

yard_exp_brackets_52[udt_column_runtime]:  IDENT;

yard_exp_brackets_52[udt_column_runtime]:  IDENT LPAREN
    yard_opt_21[udt_column_runtime] RPAREN;

yard_exp_brackets_53:  OP_LT OP_MT;

yard_exp_brackets_54:  full_ident yard_opt_42;

yard_exp_brackets_55:  DOT;

yard_exp_brackets_55:  DOUBLE_COLON;

yard_exp_brackets_56:  DEC_NUMBER;

yard_exp_brackets_56:  KW_MAX;

yard_exp_brackets_57:  DEC_NUMBER;

yard_exp_brackets_57:  KW_MAX;
