{
module Lexer

open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Reflection
open Yard.Generators.CYK
open Yard.Generators.CYKGenerator

}

let whitespaces = [' '  '\t']+
let ident_char  = ['A'-'Z' 'a'-'z' ] 
let ident = ident_char+
let decnumber = ['0'-'9']+ 

rule token = parse
    | decnumber {new CYKToken<_,_> (NUM, (LexBuffer<_>.LexemeString(lexbuf)))}
	| '+' {new CYKToken<_,_> (PLUS, "+")}
	| '*' {new CYKToken<_,_> (MULT, "*")}
    | whitespaces {token lexbuf}
	| eof {new CYKToken<_,_> (EOF, "")}
