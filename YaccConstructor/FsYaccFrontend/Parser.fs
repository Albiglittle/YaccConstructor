// Implementation file for parser generated by fsyacc
#light "off"
module Yard.Frontends.FsYaccFrontend.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Yard.Core
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"

# 10 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HEAD of (string)
  | ACTION_CODE of (string)
  | LIDENT of (string)
  | UIDENT of (string)
  | COLON
  | BAR
  | TYPE_KW
  | TYPE of (string)
  | START_KW
  | ASSOC_KW
  | TOKEN_KW
  | DOUBLE_PERC
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HEAD
    | TOKEN_ACTION_CODE
    | TOKEN_LIDENT
    | TOKEN_UIDENT
    | TOKEN_COLON
    | TOKEN_BAR
    | TOKEN_TYPE_KW
    | TOKEN_TYPE
    | TOKEN_START_KW
    | TOKEN_ASSOC_KW
    | TOKEN_TOKEN_KW
    | TOKEN_DOUBLE_PERC
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__starts
    | NONTERM_alternative
    | NONTERM_yard_list_13
    | NONTERM_yard_item_2
    | NONTERM_rule
    | NONTERM_yard_list_12
    | NONTERM_yard_item_1
    | NONTERM_typedef
    | NONTERM_start
    | NONTERM_yard_nlist_11
    | NONTERM_assoc
    | NONTERM_token
    | NONTERM_yard_nlist_10
    | NONTERM_yard_option_9
    | NONTERM_s
    | NONTERM_yard_option_8
    | NONTERM_yard_list_7
    | NONTERM_yard_nlist_6
    | NONTERM_yard_list_5
    | NONTERM_yard_list_4
    | NONTERM_yard_option_3

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | HEAD _ -> 0 
  | ACTION_CODE _ -> 1 
  | LIDENT _ -> 2 
  | UIDENT _ -> 3 
  | COLON  -> 4 
  | BAR  -> 5 
  | TYPE_KW  -> 6 
  | TYPE _ -> 7 
  | START_KW  -> 8 
  | ASSOC_KW  -> 9 
  | TOKEN_KW  -> 10 
  | DOUBLE_PERC  -> 11 
  | EOF  -> 12 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HEAD 
  | 1 -> TOKEN_ACTION_CODE 
  | 2 -> TOKEN_LIDENT 
  | 3 -> TOKEN_UIDENT 
  | 4 -> TOKEN_COLON 
  | 5 -> TOKEN_BAR 
  | 6 -> TOKEN_TYPE_KW 
  | 7 -> TOKEN_TYPE 
  | 8 -> TOKEN_START_KW 
  | 9 -> TOKEN_ASSOC_KW 
  | 10 -> TOKEN_TOKEN_KW 
  | 11 -> TOKEN_DOUBLE_PERC 
  | 12 -> TOKEN_EOF 
  | 15 -> TOKEN_end_of_input
  | 13 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__starts 
    | 1 -> NONTERM_alternative 
    | 2 -> NONTERM_yard_list_13 
    | 3 -> NONTERM_yard_list_13 
    | 4 -> NONTERM_yard_item_2 
    | 5 -> NONTERM_yard_item_2 
    | 6 -> NONTERM_rule 
    | 7 -> NONTERM_yard_list_12 
    | 8 -> NONTERM_yard_list_12 
    | 9 -> NONTERM_yard_item_1 
    | 10 -> NONTERM_typedef 
    | 11 -> NONTERM_start 
    | 12 -> NONTERM_yard_nlist_11 
    | 13 -> NONTERM_yard_nlist_11 
    | 14 -> NONTERM_assoc 
    | 15 -> NONTERM_token 
    | 16 -> NONTERM_yard_nlist_10 
    | 17 -> NONTERM_yard_nlist_10 
    | 18 -> NONTERM_yard_option_9 
    | 19 -> NONTERM_yard_option_9 
    | 20 -> NONTERM_s 
    | 21 -> NONTERM_yard_option_8 
    | 22 -> NONTERM_yard_option_8 
    | 23 -> NONTERM_yard_list_7 
    | 24 -> NONTERM_yard_list_7 
    | 25 -> NONTERM_yard_nlist_6 
    | 26 -> NONTERM_yard_nlist_6 
    | 27 -> NONTERM_yard_list_5 
    | 28 -> NONTERM_yard_list_5 
    | 29 -> NONTERM_yard_list_4 
    | 30 -> NONTERM_yard_list_4 
    | 31 -> NONTERM_yard_option_3 
    | 32 -> NONTERM_yard_option_3 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 15 
let _fsyacc_tagOfErrorTerminal = 13

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HEAD _ -> "HEAD" 
  | ACTION_CODE _ -> "ACTION_CODE" 
  | LIDENT _ -> "LIDENT" 
  | UIDENT _ -> "UIDENT" 
  | COLON  -> "COLON" 
  | BAR  -> "BAR" 
  | TYPE_KW  -> "TYPE_KW" 
  | TYPE _ -> "TYPE" 
  | START_KW  -> "START_KW" 
  | ASSOC_KW  -> "ASSOC_KW" 
  | TOKEN_KW  -> "TOKEN_KW" 
  | DOUBLE_PERC  -> "DOUBLE_PERC" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HEAD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ACTION_CODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LIDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UIDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COLON  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | TYPE_KW  -> (null : System.Object) 
  | TYPE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | START_KW  -> (null : System.Object) 
  | ASSOC_KW  -> (null : System.Object) 
  | TOKEN_KW  -> (null : System.Object) 
  | DOUBLE_PERC  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 2us; 65535us; 9us; 10us; 14us; 15us; 3us; 65535us; 4us; 5us; 9us; 2us; 14us; 2us; 3us; 65535us; 4us; 4us; 9us; 4us; 14us; 4us; 2us; 65535us; 36us; 41us; 41us; 41us; 2us; 65535us; 10us; 11us; 12us; 13us; 2us; 65535us; 10us; 12us; 12us; 12us; 2us; 65535us; 34us; 43us; 43us; 43us; 1us; 65535us; 33us; 34us; 2us; 65535us; 19us; 20us; 21us; 22us; 2us; 65535us; 32us; 45us; 45us; 45us; 2us; 65535us; 31us; 47us; 47us; 47us; 3us; 65535us; 23us; 24us; 26us; 27us; 28us; 29us; 1us; 65535us; 25us; 26us; 1us; 65535us; 0us; 1us; 1us; 65535us; 37us; 38us; 2us; 65535us; 36us; 37us; 41us; 42us; 2us; 65535us; 34us; 35us; 43us; 44us; 2us; 65535us; 32us; 33us; 45us; 46us; 2us; 65535us; 31us; 32us; 47us; 48us; 1us; 65535us; 0us; 31us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 4us; 8us; 12us; 15us; 18us; 21us; 24us; 26us; 29us; 32us; 35us; 39us; 41us; 43us; 45us; 48us; 51us; 54us; 57us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 11us; 2us; 12us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 24us; 1us; 24us; 2us; 25us; 26us; 1us; 26us; 1us; 28us; 1us; 28us; 1us; 30us; 1us; 30us; 1us; 31us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 34us; 36us; 38us; 40us; 42us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 91us; 93us; 95us; 97us; 99us; 101us; |]
let _fsyacc_action_rows = 50
let _fsyacc_actionTableElements = [|1us; 16416us; 0us; 49us; 0us; 49152us; 1us; 32768us; 1us; 3us; 0us; 16385us; 2us; 16386us; 2us; 6us; 3us; 7us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 4us; 9us; 2us; 16386us; 2us; 6us; 3us; 7us; 1us; 16391us; 5us; 14us; 0us; 16390us; 1us; 16391us; 5us; 14us; 0us; 16392us; 2us; 16386us; 2us; 6us; 3us; 7us; 0us; 16393us; 1us; 32768us; 7us; 17us; 1us; 32768us; 2us; 18us; 0us; 16394us; 1us; 32768us; 2us; 21us; 0us; 16395us; 1us; 16396us; 2us; 21us; 0us; 16397us; 1us; 32768us; 3us; 28us; 0us; 16398us; 1us; 16403us; 7us; 30us; 1us; 32768us; 3us; 28us; 0us; 16399us; 1us; 16400us; 3us; 28us; 0us; 16401us; 0us; 16402us; 1us; 16413us; 10us; 25us; 1us; 16411us; 9us; 23us; 1us; 32768us; 8us; 19us; 1us; 32768us; 6us; 16us; 1us; 32768us; 11us; 36us; 1us; 16407us; 2us; 8us; 1us; 16406us; 11us; 40us; 1us; 32768us; 12us; 39us; 0us; 16404us; 0us; 16405us; 1us; 16407us; 2us; 8us; 0us; 16408us; 1us; 16409us; 6us; 16us; 0us; 16410us; 1us; 16411us; 9us; 23us; 0us; 16412us; 1us; 16413us; 10us; 25us; 0us; 16414us; 0us; 16415us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 5us; 6us; 9us; 10us; 11us; 12us; 14us; 17us; 19us; 20us; 22us; 23us; 26us; 27us; 29us; 31us; 32us; 34us; 35us; 37us; 38us; 40us; 41us; 43us; 45us; 46us; 48us; 49us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 67us; 68us; 70us; 71us; 73us; 74us; 76us; 77us; 79us; 80us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 1us; 1us; 4us; 0us; 2us; 2us; 3us; 2us; 1us; 2us; 2us; 3us; 1us; 2us; 1us; 0us; 9us; 1us; 0us; 0us; 2us; 1us; 2us; 0us; 2us; 0us; 2us; 1us; 0us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 6us; 7us; 8us; 9us; 9us; 10us; 11us; 12us; 12us; 13us; 13us; 14us; 15us; 15us; 16us; 16us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 16388us; 16389us; 65535us; 65535us; 65535us; 16390us; 65535us; 16392us; 65535us; 16393us; 65535us; 65535us; 16394us; 65535us; 16395us; 65535us; 16397us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 16401us; 16402us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16404us; 16405us; 65535us; 16408us; 65535us; 16410us; 65535us; 16412us; 65535us; 16414us; 16415us; |]
let _fsyacc_reductions ()  =    [| 
# 189 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'a)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starts));
# 198 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_13)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 21 "Parser.fsy"
                                                              
                   )
# 21 "Parser.fsy"
                 : 'alternative));
# 210 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 23 "Parser.fsy"
                                      [] 
                   )
# 23 "Parser.fsy"
                 : 'yard_list_13));
# 220 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_item_2)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_13)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 25 "Parser.fsy"
                                     let yard_h=_1 in let yard_t=_2 in  yard_h::yard_t 
                   )
# 25 "Parser.fsy"
                 : 'yard_list_13));
# 232 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 27 "Parser.fsy"
                                            
                   )
# 27 "Parser.fsy"
                 : 'yard_item_2));
# 243 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 28 "Parser.fsy"
                                            
                   )
# 28 "Parser.fsy"
                 : 'yard_item_2));
# 254 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'alternative)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_12)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 30 "Parser.fsy"
                                                                    
                   )
# 30 "Parser.fsy"
                 : 'rule));
# 267 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 32 "Parser.fsy"
                                      [] 
                   )
# 32 "Parser.fsy"
                 : 'yard_list_12));
# 277 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_item_1)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_12)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 34 "Parser.fsy"
                                     let yard_h=_1 in let yard_t=_2 in  yard_h::yard_t 
                   )
# 34 "Parser.fsy"
                 : 'yard_list_12));
# 289 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'alternative)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 36 "Parser.fsy"
                                                     
                   )
# 36 "Parser.fsy"
                 : 'yard_item_1));
# 300 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 38 "Parser.fsy"
                                                     
                   )
# 38 "Parser.fsy"
                 : 'typedef));
# 312 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_nlist_11)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "Parser.fsy"
                                                      
                   )
# 40 "Parser.fsy"
                 : 'start));
# 323 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 42 "Parser.fsy"
                                             let yard_h=_1 in  [yard_h] 
                   )
# 42 "Parser.fsy"
                 : 'yard_nlist_11));
# 334 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_nlist_11)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "Parser.fsy"
                                      let yard_h=_1 in let yard_t=_2 in  yard_h::yard_t 
                   )
# 44 "Parser.fsy"
                 : 'yard_nlist_11));
# 346 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_nlist_10)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "Parser.fsy"
                                                      
                   )
# 46 "Parser.fsy"
                 : 'assoc));
# 357 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_option_9)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_nlist_10)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "Parser.fsy"
                                                                    
                   )
# 48 "Parser.fsy"
                 : 'token));
# 369 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "Parser.fsy"
                                             let yard_h=_1 in  [yard_h] 
                   )
# 50 "Parser.fsy"
                 : 'yard_nlist_10));
# 380 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_nlist_10)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                      let yard_h=_1 in let yard_t=_2 in  yard_h::yard_t 
                   )
# 52 "Parser.fsy"
                 : 'yard_nlist_10));
# 392 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "Parser.fsy"
                                           let yard_item=_1 in  Some yard_item 
                   )
# 54 "Parser.fsy"
                 : 'yard_option_9));
# 403 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                       None 
                   )
# 55 "Parser.fsy"
                 : 'yard_option_9));
# 413 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_option_3)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_4)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_5)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'start)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_nlist_6)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_7)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_option_8)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Parser.fsy"
                                                         
                   )
# 58 "Parser.fsy"
                 : 'a));
# 430 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                   
                   )
# 60 "Parser.fsy"
                 : 'yard_option_8));
# 440 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                       
                   )
# 61 "Parser.fsy"
                 : 'yard_option_8));
# 450 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                     [] 
                   )
# 63 "Parser.fsy"
                 : 'yard_list_7));
# 460 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rule)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_7)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                    let yard_h=_1 in let yard_t=_2 in  yard_h::yard_t 
                   )
# 65 "Parser.fsy"
                 : 'yard_list_7));
# 472 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedef)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Parser.fsy"
                                             let yard_h=_1 in  [yard_h] 
                   )
# 67 "Parser.fsy"
                 : 'yard_nlist_6));
# 483 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedef)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_nlist_6)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                     let yard_h=_1 in let yard_t=_2 in  yard_h::yard_t 
                   )
# 69 "Parser.fsy"
                 : 'yard_nlist_6));
# 495 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                     [] 
                   )
# 71 "Parser.fsy"
                 : 'yard_list_5));
# 505 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'assoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_5)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Parser.fsy"
                                    let yard_h=_1 in let yard_t=_2 in  yard_h::yard_t 
                   )
# 73 "Parser.fsy"
                 : 'yard_list_5));
# 517 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                     [] 
                   )
# 75 "Parser.fsy"
                 : 'yard_list_4));
# 527 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'token)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'yard_list_4)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Parser.fsy"
                                    let yard_h=_1 in let yard_t=_2 in  yard_h::yard_t 
                   )
# 77 "Parser.fsy"
                 : 'yard_list_4));
# 539 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                           let yard_item=_1 in  Some yard_item 
                   )
# 79 "Parser.fsy"
                 : 'yard_option_3));
# 550 "Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                       None 
                   )
# 80 "Parser.fsy"
                 : 'yard_option_3));
|]
# 561 "Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 16;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let s lexer lexbuf : 'a =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
