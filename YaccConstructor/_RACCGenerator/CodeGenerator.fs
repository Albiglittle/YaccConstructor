// CodeGenerator.fs
//
// Copyright 2009-2010 Semen Grigorev
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation.

namespace  Yard.Generators._RACCGenerator

open Yard.Core.IL
open Yard.Core.IL.Definition
open Yard.Core.IL.Production
open Yard.Core.IL.Rule

type CodeGenerator(outPath: string) = 
    class        

        let textWriter = TextWriter outPath                                
        let write str = textWriter.Write(str)
         
        let generatePreheader grammarName =
            write "//this file was generated by RACC"
            write ("//source grammar:" + grammarName )
            write ("//date:" + System.DateTime.Now.ToString())

        let generateHeader header = 
            if (Option.isSome header)
            then write (header.ToString())            
                                      
        let generateFooter footer =
            if (Option.isSome footer)
            then write (footer.ToString())

        let generateAlt alt = ()
        let generateSeq = ()
        let generateLeaf = ()
        let generateSome = ()

        let generateBody rules =            
            let generateRule rule =
                match rule.body with 
                | PAlt(alt1,alt2) -> generateAlt rule
            List.iter generateRule rules

        let genearte grammar= 
            generatePreheader grammar.info.fileName
            generateHeader grammar.head
            generateBody grammar.grammar
            generateFooter grammar.foot
            textWriter.CloseOutStream()
                
        member self.Gemerate grammar = genearte grammar
                
    end