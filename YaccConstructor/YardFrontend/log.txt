Assambly AbstractLexer.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly AbstractLexer.Core, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly AbstractParsing.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly RNGLRAbstractParser, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly AbstractLexer.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly AbstractLexer.Core, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly AbstractParsing.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly RNGLRAbstractParser, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly AbstractLexer.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly AbstractLexer.Core, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly AbstractParsing.Common, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.
Assambly RNGLRAbstractParser, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null could not de loaded.

rules:
   0: kw = MODULE 
   1: kw = INCLUDE 
   2: kw = OPEN 
   3: kw = PUBLIC 
   4: kw = PRIVATE 
   5: file = action_opt includes_or_options_or_tokens unnamed_module_opt modules foot_opt EOF 
   6: yard_start_rule = file 
   7: includes_or_options_or_tokens = 
   8: includes_or_options_or_tokens = include_ includes_or_options_or_tokens 
   9: includes_or_options_or_tokens = option_block includes_or_options_or_tokens 
  10: includes_or_options_or_tokens = tokens_block includes_or_options_or_tokens 
  11: tokens_block = TOKENS_BLOCK 
  12: include_ = INCLUDE STRING 
  13: option_block = OPTIONS_START opts BLOCK_END 
  14: opts = option opts 
  15: opts = 
  16: option = option_l_value EQUAL option_value 
  17: option_value = ident 
  18: option_value = STRING 
  19: option_value = kw 
  20: option_l_value = ident 
  21: option_l_value = kw 
  22: unnamed_module_opt = rule_nlist 
  23: modules = module_ modules 
  24: modules = 
  25: module_ = module_header ident openings rule_nlist 
  26: ident = UIDENT 
  27: ident = LIDENT 
  28: module_header = ALL_PUBLIC MODULE 
  29: module_header = MODULE 
  30: openings = 
  31: openings = OPEN ident open_list 
  32: open_list = COMMA ident open_list 
  33: open_list = 
  34: action_opt = 
  35: action_opt = ACTION 
  36: foot_opt = 
  37: foot_opt = SEMICOLON ACTION 
  38: rule_nlist = rule semi_opt rule_nlist 
  39: rule_nlist = 
  40: rule = start_rule_sign_opt access_modifier_opt LIDENT formal_meta_param_opt param_list COLON alts 
  41: start_rule_sign_opt = 
  42: start_rule_sign_opt = START_RULE_SIGN 
  43: access_modifier_opt = PUBLIC 
  44: access_modifier_opt = PRIVATE 
  45: access_modifier_opt = 
  46: formal_meta_param_opt = 
  47: formal_meta_param_opt = LESS formal_meta_list GREAT 
  48: formal_meta_list = LIDENT 
  49: formal_meta_list = LIDENT formal_meta_list 
  50: param_opt = 
  51: param_opt = PARAM 
  52: param_list = 
  53: param_list = PARAM param_list 
  54: weight_opt = 
  55: weight_opt = SQR_LBR NUMBER SQR_RBR 
  56: alts = seq 
  57: alts = seq bar_seq_nlist 
  58: bar_seq_nlist = BAR seq bar_seq_nlist 
  59: bar_seq_nlist = BAR seq 
  60: seq = lbl_seq 
  61: seq = no_lbl_seq 
  62: no_lbl_seq = seq_elem seq_elem_list action_opt 
  63: no_lbl_seq = ACTION 
  64: lbl_seq = DLABEL weight_opt LPAREN no_lbl_seq RPAREN 
  65: seq_elem_list = 
  66: seq_elem_list = seq_elem seq_elem_list 
  67: seq_elem = omit_opt bound predicate_opt 
  68: omit_opt = 
  69: omit_opt = MINUS 
  70: semi_opt = 
  71: semi_opt = SEMICOLON 
  72: predicate_opt = 
  73: predicate_opt = PREDICATE 
  74: bound = patt EQUAL prim 
  75: bound = prim 
  76: patt = LIDENT 
  77: patt = ACTION 
  78: prim = prim STAR 
  79: prim = prim PLUS 
  80: prim = prim QUESTION 
  81: prim = SQR_LBR alts SQR_RBR 
  82: prim = LPAREN alts RPAREN 
  83: prim = call 
  84: prim = lbl_seq 
  85: prim = LITERAL 
  86: meta_param = prim 
  87: meta_params = meta_param 
  88: meta_params = meta_param meta_params 
  89: meta_param_opt = 
  90: meta_param_opt = LESS meta_params GREAT 
  91: call = UIDENT 
  92: call = LIDENT meta_param_opt param_opt 
  93: tada_rule = SHARPLINE 
  94: tada_rule = EOF 
Source without filename: parserRange
Source without filename: error
<null>