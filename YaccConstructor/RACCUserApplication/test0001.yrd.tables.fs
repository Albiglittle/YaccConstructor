//this tyables was generated by RACC
//source grammar:..\..\..\..\Tests\test0001.yrd
//date:11/10/2010 16:05:51

#light "off"
module Yard.Generators._RACCGenerator.Tables

open Yard.Generators._RACCGenerator

let autumataDict = 
dict [|("s",{ 
   DIDToStateMap = dict [|(0,(State 0));(1,(State 1));(2,(State 2));(3,(State 3));(4,DummyState)|];
   DStartState   = 0;
   DFinaleStates = set [3];
   DRules        = Set.ofArray [|{ 
   FromStateID = 0;
   Symbol      = (DSymbol "e");
   Label       = set [[(FATrace TSmbS)]; [(FATrace TSeqS); (FATrace TSmbS)]];
   ToStateID   = 1;
}
;{ 
   FromStateID = 1;
   Symbol      = (DSymbol "PLUS");
   Label       = set [[(FATrace TSmbE); (FATrace TSmbS)]];
   ToStateID   = 2;
}
;{ 
   FromStateID = 2;
   Symbol      = (DSymbol "e");
   Label       = set [[(FATrace TSmbE); (FATrace TSmbS)]];
   ToStateID   = 3;
}
;{ 
   FromStateID = 3;
   Symbol      = Dummy;
   Label       = set [[(FATrace TSmbE); (FATrace TSeqE)]];
   ToStateID   = 4;
}
|];
}
);("e",{ 
   DIDToStateMap = dict [|(0,(State 0));(1,(State 1));(2,DummyState)|];
   DStartState   = 0;
   DFinaleStates = set [1];
   DRules        = Set.ofArray [|{ 
   FromStateID = 0;
   Symbol      = (DSymbol "NUMBER");
   Label       = set [[(FATrace TSmbS)]; [(FATrace TSeqS); (FATrace TSmbS)]];
   ToStateID   = 1;
}
;{ 
   FromStateID = 1;
   Symbol      = Dummy;
   Label       = set [[(FATrace TSmbE); (FATrace TSeqE)]];
   ToStateID   = 2;
}
|];
}
)|]

let items = 
List.ofArray [|("s",0);("s",1);("s",2);("s",3);("s",4);("e",0);("e",1);("e",2)|]

let gotoSet = 
Set.ofArray [|((("e", 0), (DSymbol "NUMBER")), ("e", 1));((("e", 1), Dummy), ("e", 2));((("s", 0), (DSymbol "NUMBER")), ("e", 1));((("s", 0), (DSymbol "e")), ("s", 1));((("s", 1), (DSymbol "PLUS")), ("s", 2));((("s", 2), (DSymbol "NUMBER")), ("e", 1));((("s", 2), (DSymbol "e")), ("s", 3));((("s", 3), Dummy), ("s", 4))|]

