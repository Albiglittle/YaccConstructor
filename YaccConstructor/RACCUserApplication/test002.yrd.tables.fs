//this tyables was generated by RACC
//source grammar:..\..\..\..\Tests\test002.yrd
//date:11/11/2010 10:34:16

#light "off"
module Yard.Generators._RACCGenerator.Tables

open Yard.Generators._RACCGenerator

let autumataDict = 
dict [|("s",{ 
   DIDToStateMap = dict [|(0,(State 0));(1,(State 1));(2,DummyState)|];
   DStartState   = 0;
   DFinaleStates = set [1];
   DRules        = Set.ofArray [|{ 
   FromStateID = 0;
   Symbol      = (DSymbol "expr");
   Label       = set [[(FATrace TSmbS)]; [(FATrace TSeqS); (FATrace TSmbS)]];
   ToStateID   = 1;
}
;{ 
   FromStateID = 1;
   Symbol      = Dummy;
   Label       = set [[(FATrace TSmbE); (FATrace TSeqE)]];
   ToStateID   = 2;
}
|];
}
);("expr",{ 
   DIDToStateMap = dict [|(0,(State 0));(1,(State 1));(2,(State 2));(3,(State 3));(4,(State 4));(5,DummyState);(6,DummyState)|];
   DStartState   = 0;
   DFinaleStates = set [1; 4];
   DRules        = Set.ofArray [|{ 
   FromStateID = 0;
   Symbol      = (DSymbol "NUMBER");
   Label       = set [];
   ToStateID   = 1;
}
;{ 
   FromStateID = 0;
   Symbol      = (DSymbol "expr");
   Label       = set [];
   ToStateID   = 2;
}
;{ 
   FromStateID = 1;
   Symbol      = Dummy;
   Label       = set [[(FATrace TSmbE); (FATrace TSeqE); (FATrace TAlt1E)]; [(FATrace TSmbE); (FATrace TSeqE); (FATrace TAlt2E)]];
   ToStateID   = 5;
}
;{ 
   FromStateID = 2;
   Symbol      = (DSymbol "PLUS");
   Label       = set [[(FATrace TSmbE); (FATrace TSmbS)]];
   ToStateID   = 3;
}
;{ 
   FromStateID = 3;
   Symbol      = (DSymbol "NUMBER");
   Label       = set [[(FATrace TSmbE); (FATrace TSmbS)]];
   ToStateID   = 4;
}
;{ 
   FromStateID = 4;
   Symbol      = Dummy;
   Label       = set [[(FATrace TSmbE); (FATrace TSeqE); (FATrace TAlt1E)]; [(FATrace TSmbE); (FATrace TSeqE); (FATrace TAlt2E)]];
   ToStateID   = 6;
}
|];
}
)|]

let items = 
List.ofArray [|("s",0);("s",1);("s",2);("expr",0);("expr",1);("expr",2);("expr",3);("expr",4);("expr",5);("expr",6)|]

let gotoSet = 
Set.ofArray [|((("expr", 0), (DSymbol "NUMBER")), ("expr", 1));((("expr", 0), (DSymbol "expr")), ("expr", 2));((("expr", 1), Dummy), ("expr", 5));((("expr", 2), (DSymbol "PLUS")), ("expr", 3));((("expr", 3), (DSymbol "NUMBER")), ("expr", 4));((("expr", 4), Dummy), ("expr", 6));((("s", 0), (DSymbol "NUMBER")), ("expr", 1));((("s", 0), (DSymbol "expr")), ("expr", 2));((("s", 0), (DSymbol "expr")), ("s", 1));((("s", 1), Dummy), ("s", 2))|]

