//this tables was generated by RACC
//source grammar:..\Tests\RACC\test_reduce_reduce\test_reduce_reduce.yrd
//date:3/18/2011 15:28:00

#light "off"
module Yard.Generators.RACCGenerator.Tables_Rdc_Rdc

open Yard.Generators.RACCGenerator

let private autumataDict = 
dict [|("raccStart",{ 
   DIDToStateMap = dict [|(0,(State 0));(1,(State 1));(2,DummyState)|];
   DStartState   = 0;
   DFinaleStates = Set.ofArray [|1|];
   DRules        = Set.ofArray [|{ 
   FromStateID = 0;
   Symbol      = (DSymbol "s");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbS 0))|]
|];
   ToStateID   = 1;
}
;{ 
   FromStateID = 1;
   Symbol      = Dummy;
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 0))|]
|];
   ToStateID   = 2;
}
|];
}
);("s",{ 
   DIDToStateMap = dict [|(0,(State 0));(1,(State 1));(2,(State 2));(3,DummyState);(4,DummyState)|];
   DStartState   = 0;
   DFinaleStates = Set.ofArray [|1;2|];
   DRules        = Set.ofArray [|{ 
   FromStateID = 0;
   Symbol      = (DSymbol "a");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSeqS 7));(FATrace (TAlt1S 5));(FATrace (TSeqS 2));(FATrace (TSmbS 1))|]
;List.ofArray [|(FATrace (TSeqS 7));(FATrace (TAlt2S 6));(FATrace (TSeqS 4));(FATrace (TSmbS 3))|]
|];
   ToStateID   = 1;
}
;{ 
   FromStateID = 0;
   Symbol      = (DSymbol "b");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSeqS 7));(FATrace (TAlt1S 5));(FATrace (TSeqS 2));(FATrace (TSmbS 1))|]
;List.ofArray [|(FATrace (TSeqS 7));(FATrace (TAlt2S 6));(FATrace (TSeqS 4));(FATrace (TSmbS 3))|]
|];
   ToStateID   = 2;
}
;{ 
   FromStateID = 1;
   Symbol      = Dummy;
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 1));(FATrace (TSeqE 2));(FATrace (TAlt1E 5));(FATrace (TSeqE 7))|]
|];
   ToStateID   = 3;
}
;{ 
   FromStateID = 2;
   Symbol      = Dummy;
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 3));(FATrace (TSeqE 4));(FATrace (TAlt2E 6));(FATrace (TSeqE 7))|]
|];
   ToStateID   = 4;
}
|];
}
);("a",{ 
   DIDToStateMap = dict [|(0,(State 0));(1,(State 1));(2,(State 2));(3,(State 3));(4,DummyState)|];
   DStartState   = 0;
   DFinaleStates = Set.ofArray [|3|];
   DRules        = Set.ofArray [|{ 
   FromStateID = 0;
   Symbol      = (DSymbol "NUMBER");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSeqS 11));(FATrace (TSmbS 8))|]
|];
   ToStateID   = 1;
}
;{ 
   FromStateID = 1;
   Symbol      = (DSymbol "PLUS");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 8));(FATrace (TSmbS 9))|]
|];
   ToStateID   = 2;
}
;{ 
   FromStateID = 2;
   Symbol      = (DSymbol "NUMBER");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 9));(FATrace (TSmbS 10))|]
|];
   ToStateID   = 3;
}
;{ 
   FromStateID = 3;
   Symbol      = Dummy;
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 10));(FATrace (TSeqE 11))|]
|];
   ToStateID   = 4;
}
|];
}
);("b",{ 
   DIDToStateMap = dict [|(0,(State 0));(1,(State 1));(2,(State 2));(3,(State 3));(4,DummyState)|];
   DStartState   = 0;
   DFinaleStates = Set.ofArray [|3|];
   DRules        = Set.ofArray [|{ 
   FromStateID = 0;
   Symbol      = (DSymbol "NUMBER");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSeqS 15));(FATrace (TSmbS 12))|]
|];
   ToStateID   = 1;
}
;{ 
   FromStateID = 1;
   Symbol      = (DSymbol "PLUS");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 12));(FATrace (TSmbS 13))|]
|];
   ToStateID   = 2;
}
;{ 
   FromStateID = 2;
   Symbol      = (DSymbol "NUMBER");
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 13));(FATrace (TSmbS 14))|]
|];
   ToStateID   = 3;
}
;{ 
   FromStateID = 3;
   Symbol      = Dummy;
   Label       = Set.ofArray [|List.ofArray [|(FATrace (TSmbE 14));(FATrace (TSeqE 15))|]
|];
   ToStateID   = 4;
}
|];
}
)|]

let private gotoSet = 
    Set.ofArray [|(("a",0,"NUMBER"),Set.ofArray [|("a",1)|]);(("a",1,"PLUS"),Set.ofArray [|("a",2)|]);(("a",2,"NUMBER"),Set.ofArray [|("a",3)|]);(("a",3,"Dummy"),Set.ofArray [|("a",4)|]);(("b",0,"NUMBER"),Set.ofArray [|("b",1)|]);(("b",1,"PLUS"),Set.ofArray [|("b",2)|]);(("b",2,"NUMBER"),Set.ofArray [|("b",3)|]);(("b",3,"Dummy"),Set.ofArray [|("b",4)|]);(("raccStart",0,"NUMBER"),Set.ofArray [|("a",1);("b",1)|]);(("raccStart",0,"a"),Set.ofArray [|("s",1)|]);(("raccStart",0,"b"),Set.ofArray [|("s",2)|]);(("raccStart",0,"s"),Set.ofArray [|("raccStart",1)|]);(("raccStart",1,"Dummy"),Set.ofArray [|("raccStart",2)|]);(("s",0,"NUMBER"),Set.ofArray [|("a",1);("b",1)|]);(("s",0,"a"),Set.ofArray [|("s",1)|]);(("s",0,"b"),Set.ofArray [|("s",2)|]);(("s",1,"Dummy"),Set.ofArray [|("s",3)|]);(("s",2,"Dummy"),Set.ofArray [|("s",4)|])|]
    |> dict
let tables = { gotoSet = gotoSet; automataDict = autumataDict }

