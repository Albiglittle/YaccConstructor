<?xml version="1.0"?>
<package>
<metadata>
<id>AbstractLexicalAnalysis</id>
<version>0.0.3.0</version>
<title>AbstractLexicalAnalysis of YaccConstructor</title>
<authors>YaccConstructor Software Foundation</authors>
<owners>YaccConstructor Software Foundation</owners>
<licenseUrl>https://code.google.com/p/recursive-ascent/source/browse/LICENSE</licenseUrl>
<projectUrl>https://code.google.com/p/recursive-ascent</projectUrl>
<iconUrl>https://recursive-ascent.googlecode.com/git/logo/YC_big.jpg</iconUrl>
<requireLicenseAcceptance>false</requireLicenseAcceptance>
<description>YaccConstructor lexer generator for string-embedded languages. Creates abstract lexer, based on finite state transducer - FST. According to specification machine translates input finite automata (FA) over symbol alphabet into FA over specified tokens alphabet.</description>
<releaseNotes>Support for .NET 4.0 .</releaseNotes>
<copyright>Copyright 2013, 2014</copyright>
<tags>Parsing Reengineering YaccConstructor YC Core Grammarware .NET F# FSharp</tags>
<dependencies>
<dependency id="YC.Core" version="0.0.3.0" />
</dependencies>
</metadata>
<files>
<file src="..\README.md" target="README.txt" />
<file src="..\LICENSE" target="LICENSE" />
<file src="..\NOTICE" target="NOTICE" />
<file src="..\Bin\Release\v40\FSA.*" target="lib\net40\" exclude="**\*.Test.*" />
<file src="..\Bin\Release\v40\FST.*" target="lib\net40\" exclude="**\*.Test.*" />
<file src="..\Bin\Release\v40\YC.AbstractLexer.Interpreter.*" target="lib\net40\" exclude="**\*.Test.*" />
<file src="..\Bin\Release\v40\YC.AbstractLexer.Generator.*" target="lib\net40\" exclude="**\*.Test.*" />
</files>
</package>