//this file was generated by GNESCC
//source grammar:yards\mssql0.yrd
//date:11/1/2011 1:39:11 PM

module GNESCC.Actions

open Yard.Generators.GNESCCGenerator

let getUnmatched x expectedType =
    "Unexpected type of node\nType " + x.ToString() + " is not expected in this position\n" + expectedType + " was expected." |> failwith
let start0 expr = 
    let inner  = 
        match expr with
        | REAlt(Some(x), None) -> 
            let yardLAltAction expr = 
                match expr with
                | RESeq [x0] -> 
                    let (sel_expr) =
                        let yardElemAction expr = 
                            match expr with
                            | RESeq [gnescc_x0; gnescc_x1] -> 
                                let (gnescc_x0) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RESeq [gnescc_x0; x1] -> 
                                            let (gnescc_x0) =
                                                let yardElemAction expr = 
                                                    match expr with
                                                    | RELeaf tKW_SELECT -> tKW_SELECT :?> 'a
                                                    | x -> getUnmatched x "RELeaf"

                                                yardElemAction(gnescc_x0)
                                            let (what) =
                                                let yardElemAction expr = 
                                                    match expr with
                                                    | RELeaf tIDENT -> tIDENT :?> 'a
                                                    | x -> getUnmatched x "RELeaf"

                                                yardElemAction(x1)
                                            ()
                                        | x -> getUnmatched x "RESeq"

                                    yardElemAction(gnescc_x0)
                                let (gnescc_x1) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RESeq [gnescc_x0; x1] -> 
                                            let (gnescc_x0) =
                                                let yardElemAction expr = 
                                                    match expr with
                                                    | RELeaf tKW_FROM -> tKW_FROM :?> 'a
                                                    | x -> getUnmatched x "RELeaf"

                                                yardElemAction(gnescc_x0)
                                            let (where) =
                                                let yardElemAction expr = 
                                                    match expr with
                                                    | RELeaf tIDENT -> tIDENT :?> 'a
                                                    | x -> getUnmatched x "RELeaf"

                                                yardElemAction(x1)
                                            ()
                                        | x -> getUnmatched x "RESeq"

                                    yardElemAction(gnescc_x1)
                                (gnescc_x0,gnescc_x1 )
                            | x -> getUnmatched x "RESeq"

                        yardElemAction(x0)
                    ( )
                | x -> getUnmatched x "RESeq"

            yardLAltAction x 
        | REAlt(None, Some(x)) -> 
            let yardRAltAction expr = 
                match expr with
                | REAlt(Some(x), None) -> 
                    let yardLAltAction expr = 
                        match expr with
                        | RESeq [gnescc_x0] -> 
                            let (gnescc_x0) =
                                let yardElemAction expr = 
                                    match expr with
                                    | RELeaf tCOMMENT -> tCOMMENT :?> 'a
                                    | x -> getUnmatched x "RELeaf"

                                yardElemAction(gnescc_x0)
                            (gnescc_x0 )
                        | x -> getUnmatched x "RESeq"

                    yardLAltAction x 
                | REAlt(None, Some(x)) -> 
                    let yardRAltAction expr = 
                        match expr with
                        | REAlt(Some(x), None) -> 
                            let yardLAltAction expr = 
                                match expr with
                                | RESeq [gnescc_x0] -> 
                                    let (gnescc_x0) =
                                        let yardElemAction expr = 
                                            match expr with
                                            | RELeaf tGO -> tGO :?> 'a
                                            | x -> getUnmatched x "RELeaf"

                                        yardElemAction(gnescc_x0)
                                    (gnescc_x0 )
                                | x -> getUnmatched x "RESeq"

                            yardLAltAction x 
                        | REAlt(None, Some(x)) -> 
                            let yardRAltAction expr = 
                                match expr with
                                | REAlt(Some(x), None) -> 
                                    let yardLAltAction expr = 
                                        match expr with
                                        | RESeq [gnescc_x0] -> 
                                            let (gnescc_x0) =
                                                let yardElemAction expr = 
                                                    match expr with
                                                    | RELeaf tGLOBALVAR -> tGLOBALVAR :?> 'a
                                                    | x -> getUnmatched x "RELeaf"

                                                yardElemAction(gnescc_x0)
                                            (gnescc_x0 )
                                        | x -> getUnmatched x "RESeq"

                                    yardLAltAction x 
                                | REAlt(None, Some(x)) -> 
                                    let yardRAltAction expr = 
                                        match expr with
                                        | REAlt(Some(x), None) -> 
                                            let yardLAltAction expr = 
                                                match expr with
                                                | RESeq [gnescc_x0] -> 
                                                    let (gnescc_x0) =
                                                        let yardElemAction expr = 
                                                            match expr with
                                                            | RELeaf tGLOBALTEMPOBJ -> tGLOBALTEMPOBJ :?> 'a
                                                            | x -> getUnmatched x "RELeaf"

                                                        yardElemAction(gnescc_x0)
                                                    (gnescc_x0 )
                                                | x -> getUnmatched x "RESeq"

                                            yardLAltAction x 
                                        | REAlt(None, Some(x)) -> 
                                            let yardRAltAction expr = 
                                                match expr with
                                                | RESeq [gnescc_x0] -> 
                                                    let (gnescc_x0) =
                                                        let yardElemAction expr = 
                                                            match expr with
                                                            | RELeaf tTEMPOBJ -> tTEMPOBJ :?> 'a
                                                            | x -> getUnmatched x "RELeaf"

                                                        yardElemAction(gnescc_x0)
                                                    (gnescc_x0 )
                                                | x -> getUnmatched x "RESeq"

                                            yardRAltAction x 
                                        | x -> getUnmatched x "REAlt"

                                    yardRAltAction x 
                                | x -> getUnmatched x "REAlt"

                            yardRAltAction x 
                        | x -> getUnmatched x "REAlt"

                    yardRAltAction x 
                | x -> getUnmatched x "REAlt"

            yardRAltAction x 
        | x -> getUnmatched x "REAlt"
    box (inner)
let create_proc1 expr = 
    let inner  = 
        match expr with
        | REAlt(Some(x), None) -> 
            let yardLAltAction expr = 
                match expr with
                | RESeq [x0; gnescc_x1; gnescc_x2; gnescc_x3; gnescc_x4; gnescc_x5; gnescc_x6; gnescc_x7; gnescc_x8; gnescc_x9] -> 
                    let (xxx) =
                        let yardElemAction expr = 
                            match expr with
                            | RESeq [gnescc_x0; gnescc_x1] -> 
                                let (gnescc_x0) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RELeaf tKW_CREATE -> tKW_CREATE :?> 'a
                                        | x -> getUnmatched x "RELeaf"

                                    yardElemAction(gnescc_x0)
                                let (gnescc_x1) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | REAlt(Some(x), None) -> 
                                            let yardLAltAction expr = 
                                                match expr with
                                                | RESeq [gnescc_x0] -> 
                                                    let (gnescc_x0) =
                                                        let yardElemAction expr = 
                                                            match expr with
                                                            | RELeaf tKW_PROCEDURE -> tKW_PROCEDURE :?> 'a
                                                            | x -> getUnmatched x "RELeaf"

                                                        yardElemAction(gnescc_x0)
                                                    (gnescc_x0 )
                                                | x -> getUnmatched x "RESeq"

                                            yardLAltAction x 
                                        | REAlt(None, Some(x)) -> 
                                            let yardRAltAction expr = 
                                                match expr with
                                                | RESeq [gnescc_x0] -> 
                                                    let (gnescc_x0) =
                                                        let yardElemAction expr = 
                                                            match expr with
                                                            | RELeaf tKW_PROC -> tKW_PROC :?> 'a
                                                            | x -> getUnmatched x "RELeaf"

                                                        yardElemAction(gnescc_x0)
                                                    (gnescc_x0 )
                                                | x -> getUnmatched x "RESeq"

                                            yardRAltAction x 
                                        | x -> getUnmatched x "REAlt"

                                    yardElemAction(gnescc_x1)
                                (gnescc_x0,gnescc_x1 )
                            | x -> getUnmatched x "RESeq"

                        yardElemAction(x0)
                    let (gnescc_x1) =
                        let yardElemAction expr = 
                            match expr with
                            | REOpt(opt) -> 
                                let yardOptAction expr = 
                                    match expr with
                                    | RESeq [gnescc_x0; gnescc_x1] -> 
                                        let (gnescc_x0) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RESeq [x0] -> 
                                                    let (schema_name) =
                                                        let yardElemAction expr = 
                                                            match expr with
                                                            | RELeaf tIDENT -> tIDENT :?> 'a
                                                            | x -> getUnmatched x "RELeaf"

                                                        yardElemAction(x0)
                                                    ()
                                                | x -> getUnmatched x "RESeq"

                                            yardElemAction(gnescc_x0)
                                        let (gnescc_x1) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tDOT -> tDOT :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x1)
                                        (gnescc_x0,gnescc_x1 )
                                    | x -> getUnmatched x "RESeq"

                                if opt.IsSome then Some (yardOptAction opt.Value) else None 
                            | x -> getUnmatched x "REOpt"

                        yardElemAction(gnescc_x1)
                    let (gnescc_x2) =
                        let yardElemAction expr = 
                            match expr with
                            | RESeq [x0] -> 
                                let (proc_name) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RELeaf tIDENT -> tIDENT :?> 'a
                                        | x -> getUnmatched x "RELeaf"

                                    yardElemAction(x0)
                                ()
                            | x -> getUnmatched x "RESeq"

                        yardElemAction(gnescc_x2)
                    let (gnescc_x3) =
                        let yardElemAction expr = 
                            match expr with
                            | REOpt(opt) -> 
                                let yardOptAction expr = 
                                    match expr with
                                    | RESeq [gnescc_x0; gnescc_x1] -> 
                                        let (gnescc_x0) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tSEMI -> tSEMI :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x0)
                                        let (gnescc_x1) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tIDENT -> tIDENT :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x1)
                                        (gnescc_x0,gnescc_x1 )
                                    | x -> getUnmatched x "RESeq"

                                if opt.IsSome then Some (yardOptAction opt.Value) else None 
                            | x -> getUnmatched x "REOpt"

                        yardElemAction(gnescc_x3)
                    let (gnescc_x4) =
                        let yardElemAction expr = 
                            match expr with
                            | REClosure(lst) -> 
                                let yardClsAction expr = 
                                    match expr with
                                    | RESeq [gnescc_x0; gnescc_x1; gnescc_x2; gnescc_x3; gnescc_x4] -> 
                                        let (gnescc_x0) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RESeq [gnescc_x0; gnescc_x1; gnescc_x2] -> 
                                                    let (gnescc_x0) =
                                                        let yardElemAction expr = 
                                                            match expr with
                                                            | RELeaf tLOCALVAR -> tLOCALVAR :?> 'a
                                                            | x -> getUnmatched x "RELeaf"

                                                        yardElemAction(gnescc_x0)
                                                    let (gnescc_x1) =
                                                        let yardElemAction expr = 
                                                            match expr with
                                                            | REOpt(opt) -> 
                                                                let yardOptAction expr = 
                                                                    match expr with
                                                                    | RESeq [gnescc_x0; gnescc_x1] -> 
                                                                        let (gnescc_x0) =
                                                                            let yardElemAction expr = 
                                                                                match expr with
                                                                                | RELeaf tIDENT -> tIDENT :?> 'a
                                                                                | x -> getUnmatched x "RELeaf"

                                                                            yardElemAction(gnescc_x0)
                                                                        let (gnescc_x1) =
                                                                            let yardElemAction expr = 
                                                                                match expr with
                                                                                | RELeaf tDOT -> tDOT :?> 'a
                                                                                | x -> getUnmatched x "RELeaf"

                                                                            yardElemAction(gnescc_x1)
                                                                        (gnescc_x0,gnescc_x1 )
                                                                    | x -> getUnmatched x "RESeq"

                                                                if opt.IsSome then Some (yardOptAction opt.Value) else None 
                                                            | x -> getUnmatched x "REOpt"

                                                        yardElemAction(gnescc_x1)
                                                    let (gnescc_x2) =
                                                        let yardElemAction expr = 
                                                            match expr with
                                                            | RELeaf sql_datatype -> (sql_datatype :?> _ ) 
                                                            | x -> getUnmatched x "RELeaf"

                                                        yardElemAction(gnescc_x2)
                                                    (gnescc_x0,gnescc_x1,gnescc_x2 )
                                                | x -> getUnmatched x "RESeq"

                                            yardElemAction(gnescc_x0)
                                        let (gnescc_x1) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | REOpt(opt) -> 
                                                    let yardOptAction expr = 
                                                        match expr with
                                                        | RESeq [gnescc_x0] -> 
                                                            let (gnescc_x0) =
                                                                let yardElemAction expr = 
                                                                    match expr with
                                                                    | RELeaf tKW_VARYING -> tKW_VARYING :?> 'a
                                                                    | x -> getUnmatched x "RELeaf"

                                                                yardElemAction(gnescc_x0)
                                                            (gnescc_x0 )
                                                        | x -> getUnmatched x "RESeq"

                                                    if opt.IsSome then Some (yardOptAction opt.Value) else None 
                                                | x -> getUnmatched x "REOpt"

                                            yardElemAction(gnescc_x1)
                                        let (gnescc_x2) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | REOpt(opt) -> 
                                                    let yardOptAction expr = 
                                                        match expr with
                                                        | RESeq [gnescc_x0; gnescc_x1] -> 
                                                            let (gnescc_x0) =
                                                                let yardElemAction expr = 
                                                                    match expr with
                                                                    | RELeaf tEQ -> tEQ :?> 'a
                                                                    | x -> getUnmatched x "RELeaf"

                                                                yardElemAction(gnescc_x0)
                                                            let (gnescc_x1) =
                                                                let yardElemAction expr = 
                                                                    match expr with
                                                                    | RELeaf tIDENT -> tIDENT :?> 'a
                                                                    | x -> getUnmatched x "RELeaf"

                                                                yardElemAction(gnescc_x1)
                                                            (gnescc_x0,gnescc_x1 )
                                                        | x -> getUnmatched x "RESeq"

                                                    if opt.IsSome then Some (yardOptAction opt.Value) else None 
                                                | x -> getUnmatched x "REOpt"

                                            yardElemAction(gnescc_x2)
                                        let (gnescc_x3) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | REOpt(opt) -> 
                                                    let yardOptAction expr = 
                                                        match expr with
                                                        | REAlt(Some(x), None) -> 
                                                            let yardLAltAction expr = 
                                                                match expr with
                                                                | RESeq [gnescc_x0] -> 
                                                                    let (gnescc_x0) =
                                                                        let yardElemAction expr = 
                                                                            match expr with
                                                                            | RELeaf tKW_OUT -> tKW_OUT :?> 'a
                                                                            | x -> getUnmatched x "RELeaf"

                                                                        yardElemAction(gnescc_x0)
                                                                    (gnescc_x0 )
                                                                | x -> getUnmatched x "RESeq"

                                                            yardLAltAction x 
                                                        | REAlt(None, Some(x)) -> 
                                                            let yardRAltAction expr = 
                                                                match expr with
                                                                | RESeq [gnescc_x0] -> 
                                                                    let (gnescc_x0) =
                                                                        let yardElemAction expr = 
                                                                            match expr with
                                                                            | RELeaf tKW_OUTPUT -> tKW_OUTPUT :?> 'a
                                                                            | x -> getUnmatched x "RELeaf"

                                                                        yardElemAction(gnescc_x0)
                                                                    (gnescc_x0 )
                                                                | x -> getUnmatched x "RESeq"

                                                            yardRAltAction x 
                                                        | x -> getUnmatched x "REAlt"

                                                    if opt.IsSome then Some (yardOptAction opt.Value) else None 
                                                | x -> getUnmatched x "REOpt"

                                            yardElemAction(gnescc_x3)
                                        let (gnescc_x4) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | REOpt(opt) -> 
                                                    let yardOptAction expr = 
                                                        match expr with
                                                        | RESeq [gnescc_x0] -> 
                                                            let (gnescc_x0) =
                                                                let yardElemAction expr = 
                                                                    match expr with
                                                                    | RELeaf tKW_READONLY -> tKW_READONLY :?> 'a
                                                                    | x -> getUnmatched x "RELeaf"

                                                                yardElemAction(gnescc_x0)
                                                            (gnescc_x0 )
                                                        | x -> getUnmatched x "RESeq"

                                                    if opt.IsSome then Some (yardOptAction opt.Value) else None 
                                                | x -> getUnmatched x "REOpt"

                                            yardElemAction(gnescc_x4)
                                        (gnescc_x0,gnescc_x1,gnescc_x2,gnescc_x3,gnescc_x4 )
                                    | x -> getUnmatched x "RESeq"

                                List.map yardClsAction lst 
                            | x -> getUnmatched x "REClosure"

                        yardElemAction(gnescc_x4)
                    let (gnescc_x5) =
                        let yardElemAction expr = 
                            match expr with
                            | REOpt(opt) -> 
                                let yardOptAction expr = 
                                    match expr with
                                    | RESeq [gnescc_x0; gnescc_x1] -> 
                                        let (gnescc_x0) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tKW_WITH -> tKW_WITH :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x0)
                                        let (gnescc_x1) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | REClosure(lst) -> 
                                                    let yardClsAction expr = 
                                                        match expr with
                                                        | RESeq [gnescc_x0] -> 
                                                            let (gnescc_x0) =
                                                                let yardElemAction expr = 
                                                                    match expr with
                                                                    | RELeaf execute_as -> (execute_as :?> _ ) 
                                                                    | x -> getUnmatched x "RELeaf"

                                                                yardElemAction(gnescc_x0)
                                                            (gnescc_x0 )
                                                        | x -> getUnmatched x "RESeq"

                                                    List.map yardClsAction lst 
                                                | x -> getUnmatched x "REClosure"

                                            yardElemAction(gnescc_x1)
                                        (gnescc_x0,gnescc_x1 )
                                    | x -> getUnmatched x "RESeq"

                                if opt.IsSome then Some (yardOptAction opt.Value) else None 
                            | x -> getUnmatched x "REOpt"

                        yardElemAction(gnescc_x5)
                    let (gnescc_x6) =
                        let yardElemAction expr = 
                            match expr with
                            | REOpt(opt) -> 
                                let yardOptAction expr = 
                                    match expr with
                                    | RESeq [gnescc_x0; gnescc_x1] -> 
                                        let (gnescc_x0) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tKW_FOR -> tKW_FOR :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x0)
                                        let (gnescc_x1) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tKW_REPLICATION -> tKW_REPLICATION :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x1)
                                        (gnescc_x0,gnescc_x1 )
                                    | x -> getUnmatched x "RESeq"

                                if opt.IsSome then Some (yardOptAction opt.Value) else None 
                            | x -> getUnmatched x "REOpt"

                        yardElemAction(gnescc_x6)
                    let (gnescc_x7) =
                        let yardElemAction expr = 
                            match expr with
                            | RELeaf tKW_AS -> tKW_AS :?> 'a
                            | x -> getUnmatched x "RELeaf"

                        yardElemAction(gnescc_x7)
                    let (gnescc_x8) =
                        let yardElemAction expr = 
                            match expr with
                            | RESeq [gnescc_x0; gnescc_x1; gnescc_x2] -> 
                                let (gnescc_x0) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | REOpt(opt) -> 
                                            let yardOptAction expr = 
                                                match expr with
                                                | RELeaf tKW_BEGIN -> tKW_BEGIN :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            if opt.IsSome then Some (yardOptAction opt.Value) else None 
                                        | x -> getUnmatched x "REOpt"

                                    yardElemAction(gnescc_x0)
                                let (gnescc_x1) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RELeaf sql_statement -> (sql_statement :?> _ ) 
                                        | x -> getUnmatched x "RELeaf"

                                    yardElemAction(gnescc_x1)
                                let (gnescc_x2) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | REOpt(opt) -> 
                                            let yardOptAction expr = 
                                                match expr with
                                                | RELeaf tKW_END -> tKW_END :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            if opt.IsSome then Some (yardOptAction opt.Value) else None 
                                        | x -> getUnmatched x "REOpt"

                                    yardElemAction(gnescc_x2)
                                (gnescc_x0,gnescc_x1,gnescc_x2 )
                            | x -> getUnmatched x "RESeq"

                        yardElemAction(gnescc_x8)
                    let (gnescc_x9) =
                        let yardElemAction expr = 
                            match expr with
                            | REOpt(opt) -> 
                                let yardOptAction expr = 
                                    match expr with
                                    | RESeq [gnescc_x0] -> 
                                        let (gnescc_x0) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tSEMI -> tSEMI :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x0)
                                        (gnescc_x0 )
                                    | x -> getUnmatched x "RESeq"

                                if opt.IsSome then Some (yardOptAction opt.Value) else None 
                            | x -> getUnmatched x "REOpt"

                        yardElemAction(gnescc_x9)
                    ()
                | x -> getUnmatched x "RESeq"

            yardLAltAction x 
        | REAlt(None, Some(x)) -> 
            let yardRAltAction expr = 
                match expr with
                | RESeq [gnescc_x0] -> 
                    let (gnescc_x0) =
                        let yardElemAction expr = 
                            match expr with
                            | RELeaf start -> (start :?> _ ) 
                            | x -> getUnmatched x "RELeaf"

                        yardElemAction(gnescc_x0)
                    ()
                | x -> getUnmatched x "RESeq"

            yardRAltAction x 
        | x -> getUnmatched x "REAlt"
    box (inner)
let sql_statement2 expr = 
    let inner  = 
        match expr with
        | RESeq [gnescc_x0] -> 
            let (gnescc_x0) =
                let yardElemAction expr = 
                    match expr with
                    | RESeq [gnescc_x0; gnescc_x1] -> 
                        let (gnescc_x0) =
                            let yardElemAction expr = 
                                match expr with
                                | RESeq [gnescc_x0; x1] -> 
                                    let (gnescc_x0) =
                                        let yardElemAction expr = 
                                            match expr with
                                            | RELeaf tKW_SELECT -> tKW_SELECT :?> 'a
                                            | x -> getUnmatched x "RELeaf"

                                        yardElemAction(gnescc_x0)
                                    let (what) =
                                        let yardElemAction expr = 
                                            match expr with
                                            | RELeaf tIDENT -> tIDENT :?> 'a
                                            | x -> getUnmatched x "RELeaf"

                                        yardElemAction(x1)
                                    ()
                                | x -> getUnmatched x "RESeq"

                            yardElemAction(gnescc_x0)
                        let (gnescc_x1) =
                            let yardElemAction expr = 
                                match expr with
                                | RESeq [gnescc_x0; x1] -> 
                                    let (gnescc_x0) =
                                        let yardElemAction expr = 
                                            match expr with
                                            | RELeaf tKW_FROM -> tKW_FROM :?> 'a
                                            | x -> getUnmatched x "RELeaf"

                                        yardElemAction(gnescc_x0)
                                    let (where) =
                                        let yardElemAction expr = 
                                            match expr with
                                            | RELeaf tIDENT -> tIDENT :?> 'a
                                            | x -> getUnmatched x "RELeaf"

                                        yardElemAction(x1)
                                    ()
                                | x -> getUnmatched x "RESeq"

                            yardElemAction(gnescc_x1)
                        (gnescc_x0,gnescc_x1 )
                    | x -> getUnmatched x "RESeq"

                yardElemAction(gnescc_x0)
            ( )
        | x -> getUnmatched x "RESeq"
    box (inner)
let sql_datatype3 expr = 
    let inner  = 
        match expr with
        | RESeq [gnescc_x0] -> 
            let (gnescc_x0) =
                let yardElemAction expr = 
                    match expr with
                    | REAlt(Some(x), None) -> 
                        let yardLAltAction expr = 
                            match expr with
                            | RESeq [gnescc_x0] -> 
                                let (gnescc_x0) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RELeaf tKW_BIGINT -> tKW_BIGINT :?> 'a
                                        | x -> getUnmatched x "RELeaf"

                                    yardElemAction(gnescc_x0)
                                (gnescc_x0 )
                            | x -> getUnmatched x "RESeq"

                        yardLAltAction x 
                    | REAlt(None, Some(x)) -> 
                        let yardRAltAction expr = 
                            match expr with
                            | REAlt(Some(x), None) -> 
                                let yardLAltAction expr = 
                                    match expr with
                                    | RESeq [gnescc_x0] -> 
                                        let (gnescc_x0) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tKW_NUMERIC -> tKW_NUMERIC :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x0)
                                        (gnescc_x0 )
                                    | x -> getUnmatched x "RESeq"

                                yardLAltAction x 
                            | REAlt(None, Some(x)) -> 
                                let yardRAltAction expr = 
                                    match expr with
                                    | REAlt(Some(x), None) -> 
                                        let yardLAltAction expr = 
                                            match expr with
                                            | RESeq [gnescc_x0] -> 
                                                let (gnescc_x0) =
                                                    let yardElemAction expr = 
                                                        match expr with
                                                        | RELeaf tKW_BIT -> tKW_BIT :?> 'a
                                                        | x -> getUnmatched x "RELeaf"

                                                    yardElemAction(gnescc_x0)
                                                (gnescc_x0 )
                                            | x -> getUnmatched x "RESeq"

                                        yardLAltAction x 
                                    | REAlt(None, Some(x)) -> 
                                        let yardRAltAction expr = 
                                            match expr with
                                            | REAlt(Some(x), None) -> 
                                                let yardLAltAction expr = 
                                                    match expr with
                                                    | RESeq [gnescc_x0] -> 
                                                        let (gnescc_x0) =
                                                            let yardElemAction expr = 
                                                                match expr with
                                                                | RELeaf tKW_SMALLINT -> tKW_SMALLINT :?> 'a
                                                                | x -> getUnmatched x "RELeaf"

                                                            yardElemAction(gnescc_x0)
                                                        (gnescc_x0 )
                                                    | x -> getUnmatched x "RESeq"

                                                yardLAltAction x 
                                            | REAlt(None, Some(x)) -> 
                                                let yardRAltAction expr = 
                                                    match expr with
                                                    | REAlt(Some(x), None) -> 
                                                        let yardLAltAction expr = 
                                                            match expr with
                                                            | RESeq [gnescc_x0] -> 
                                                                let (gnescc_x0) =
                                                                    let yardElemAction expr = 
                                                                        match expr with
                                                                        | RELeaf tKW_DECIMAL -> tKW_DECIMAL :?> 'a
                                                                        | x -> getUnmatched x "RELeaf"

                                                                    yardElemAction(gnescc_x0)
                                                                (gnescc_x0 )
                                                            | x -> getUnmatched x "RESeq"

                                                        yardLAltAction x 
                                                    | REAlt(None, Some(x)) -> 
                                                        let yardRAltAction expr = 
                                                            match expr with
                                                            | REAlt(Some(x), None) -> 
                                                                let yardLAltAction expr = 
                                                                    match expr with
                                                                    | RESeq [gnescc_x0] -> 
                                                                        let (gnescc_x0) =
                                                                            let yardElemAction expr = 
                                                                                match expr with
                                                                                | RELeaf tKW_SMALLMONEY -> tKW_SMALLMONEY :?> 'a
                                                                                | x -> getUnmatched x "RELeaf"

                                                                            yardElemAction(gnescc_x0)
                                                                        (gnescc_x0 )
                                                                    | x -> getUnmatched x "RESeq"

                                                                yardLAltAction x 
                                                            | REAlt(None, Some(x)) -> 
                                                                let yardRAltAction expr = 
                                                                    match expr with
                                                                    | REAlt(Some(x), None) -> 
                                                                        let yardLAltAction expr = 
                                                                            match expr with
                                                                            | RESeq [gnescc_x0] -> 
                                                                                let (gnescc_x0) =
                                                                                    let yardElemAction expr = 
                                                                                        match expr with
                                                                                        | RELeaf tKW_INT -> tKW_INT :?> 'a
                                                                                        | x -> getUnmatched x "RELeaf"

                                                                                    yardElemAction(gnescc_x0)
                                                                                (gnescc_x0 )
                                                                            | x -> getUnmatched x "RESeq"

                                                                        yardLAltAction x 
                                                                    | REAlt(None, Some(x)) -> 
                                                                        let yardRAltAction expr = 
                                                                            match expr with
                                                                            | REAlt(Some(x), None) -> 
                                                                                let yardLAltAction expr = 
                                                                                    match expr with
                                                                                    | RESeq [gnescc_x0] -> 
                                                                                        let (gnescc_x0) =
                                                                                            let yardElemAction expr = 
                                                                                                match expr with
                                                                                                | RELeaf tKW_TINYINT -> tKW_TINYINT :?> 'a
                                                                                                | x -> getUnmatched x "RELeaf"

                                                                                            yardElemAction(gnescc_x0)
                                                                                        (gnescc_x0 )
                                                                                    | x -> getUnmatched x "RESeq"

                                                                                yardLAltAction x 
                                                                            | REAlt(None, Some(x)) -> 
                                                                                let yardRAltAction expr = 
                                                                                    match expr with
                                                                                    | RESeq [gnescc_x0] -> 
                                                                                        let (gnescc_x0) =
                                                                                            let yardElemAction expr = 
                                                                                                match expr with
                                                                                                | RELeaf tKW_MONEY -> tKW_MONEY :?> 'a
                                                                                                | x -> getUnmatched x "RELeaf"

                                                                                            yardElemAction(gnescc_x0)
                                                                                        (gnescc_x0 )
                                                                                    | x -> getUnmatched x "RESeq"

                                                                                yardRAltAction x 
                                                                            | x -> getUnmatched x "REAlt"

                                                                        yardRAltAction x 
                                                                    | x -> getUnmatched x "REAlt"

                                                                yardRAltAction x 
                                                            | x -> getUnmatched x "REAlt"

                                                        yardRAltAction x 
                                                    | x -> getUnmatched x "REAlt"

                                                yardRAltAction x 
                                            | x -> getUnmatched x "REAlt"

                                        yardRAltAction x 
                                    | x -> getUnmatched x "REAlt"

                                yardRAltAction x 
                            | x -> getUnmatched x "REAlt"

                        yardRAltAction x 
                    | x -> getUnmatched x "REAlt"

                yardElemAction(gnescc_x0)
            ()
        | x -> getUnmatched x "RESeq"
    box (inner)
let execute_as4 expr = 
    let inner  = 
        match expr with
        | RESeq [gnescc_x0; gnescc_x1; gnescc_x2] -> 
            let (gnescc_x0) =
                let yardElemAction expr = 
                    match expr with
                    | REAlt(Some(x), None) -> 
                        let yardLAltAction expr = 
                            match expr with
                            | RESeq [gnescc_x0] -> 
                                let (gnescc_x0) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RELeaf tKW_EXEC -> tKW_EXEC :?> 'a
                                        | x -> getUnmatched x "RELeaf"

                                    yardElemAction(gnescc_x0)
                                (gnescc_x0 )
                            | x -> getUnmatched x "RESeq"

                        yardLAltAction x 
                    | REAlt(None, Some(x)) -> 
                        let yardRAltAction expr = 
                            match expr with
                            | RESeq [gnescc_x0] -> 
                                let (gnescc_x0) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RELeaf tKW_EXECUTE -> tKW_EXECUTE :?> 'a
                                        | x -> getUnmatched x "RELeaf"

                                    yardElemAction(gnescc_x0)
                                (gnescc_x0 )
                            | x -> getUnmatched x "RESeq"

                        yardRAltAction x 
                    | x -> getUnmatched x "REAlt"

                yardElemAction(gnescc_x0)
            let (gnescc_x1) =
                let yardElemAction expr = 
                    match expr with
                    | RELeaf tKW_AS -> tKW_AS :?> 'a
                    | x -> getUnmatched x "RELeaf"

                yardElemAction(gnescc_x1)
            let (gnescc_x2) =
                let yardElemAction expr = 
                    match expr with
                    | REAlt(Some(x), None) -> 
                        let yardLAltAction expr = 
                            match expr with
                            | RESeq [gnescc_x0] -> 
                                let (gnescc_x0) =
                                    let yardElemAction expr = 
                                        match expr with
                                        | RELeaf tKW_CALLER -> tKW_CALLER :?> 'a
                                        | x -> getUnmatched x "RELeaf"

                                    yardElemAction(gnescc_x0)
                                (gnescc_x0 )
                            | x -> getUnmatched x "RESeq"

                        yardLAltAction x 
                    | REAlt(None, Some(x)) -> 
                        let yardRAltAction expr = 
                            match expr with
                            | REAlt(Some(x), None) -> 
                                let yardLAltAction expr = 
                                    match expr with
                                    | RESeq [gnescc_x0] -> 
                                        let (gnescc_x0) =
                                            let yardElemAction expr = 
                                                match expr with
                                                | RELeaf tKW_SELF -> tKW_SELF :?> 'a
                                                | x -> getUnmatched x "RELeaf"

                                            yardElemAction(gnescc_x0)
                                        (gnescc_x0 )
                                    | x -> getUnmatched x "RESeq"

                                yardLAltAction x 
                            | REAlt(None, Some(x)) -> 
                                let yardRAltAction expr = 
                                    match expr with
                                    | REAlt(Some(x), None) -> 
                                        let yardLAltAction expr = 
                                            match expr with
                                            | RESeq [gnescc_x0] -> 
                                                let (gnescc_x0) =
                                                    let yardElemAction expr = 
                                                        match expr with
                                                        | RELeaf tKW_OWNER -> tKW_OWNER :?> 'a
                                                        | x -> getUnmatched x "RELeaf"

                                                    yardElemAction(gnescc_x0)
                                                (gnescc_x0 )
                                            | x -> getUnmatched x "RESeq"

                                        yardLAltAction x 
                                    | REAlt(None, Some(x)) -> 
                                        let yardRAltAction expr = 
                                            match expr with
                                            | RESeq [gnescc_x0] -> 
                                                let (gnescc_x0) =
                                                    let yardElemAction expr = 
                                                        match expr with
                                                        | RESeq [x0] -> 
                                                            let (username) =
                                                                let yardElemAction expr = 
                                                                    match expr with
                                                                    | RELeaf tIDENT -> tIDENT :?> 'a
                                                                    | x -> getUnmatched x "RELeaf"

                                                                yardElemAction(x0)
                                                            (x0 )
                                                        | x -> getUnmatched x "RESeq"

                                                    yardElemAction(gnescc_x0)
                                                (gnescc_x0 )
                                            | x -> getUnmatched x "RESeq"

                                        yardRAltAction x 
                                    | x -> getUnmatched x "REAlt"

                                yardRAltAction x 
                            | x -> getUnmatched x "REAlt"

                        yardRAltAction x 
                    | x -> getUnmatched x "REAlt"

                yardElemAction(gnescc_x2)
            ()
        | x -> getUnmatched x "RESeq"
    box (inner)

let ruleToAction = dict [|(4,execute_as4); (1,sql_datatype3); (0,sql_statement2); (3,create_proc1); (5,start0)|]

